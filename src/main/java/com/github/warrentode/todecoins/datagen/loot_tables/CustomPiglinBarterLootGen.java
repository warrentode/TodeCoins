package com.github.warrentode.todecoins.datagen.loot_tables;

import com.github.warrentode.todecoins.item.ModItems;
import com.github.warrentode.todecoins.loot.ModBuiltInLootTables;
import com.github.warrentode.todecoins.loot.TradeLootTables;
import com.github.warrentode.todecoins.loot.conditions.season.*;
import com.github.warrentode.todecoins.util.TodeCoinsTags;
import net.minecraft.data.loot.PiglinBarterLoot;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.alchemy.Potions;
import net.minecraft.world.item.enchantment.Enchantments;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.LootTableReference;
import net.minecraft.world.level.storage.loot.entries.TagEntry;
import net.minecraft.world.level.storage.loot.functions.EnchantRandomlyFunction;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.functions.SetPotionFunction;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraft.world.level.storage.loot.providers.number.UniformGenerator;
import org.jetbrains.annotations.NotNull;

import java.util.function.BiConsumer;

public class CustomPiglinBarterLootGen extends PiglinBarterLoot {
    public void accept(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        consumer.accept(TradeLootTables.CHEAP_TRADE_GOODS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(TodeCoinsTags.Items.PIGLIN_FOOD))
                        ));
        consumer.accept(TradeLootTables.COMMON_TRADE_GOODS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(TodeCoinsTags.Items.PIGLIN_MERCHANT_COMMON_GOODS))
                        ));
        consumer.accept(TradeLootTables.IRON_TIER_EQUIPMENT_SET,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_WEAPONS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_TOOLS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_BOOTS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_LEGGINGS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_CHESTPLATES_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.IRON_TIER_HELMETS_TABLE))
                                .add(LootItem.lootTableItem(Items.CROSSBOW))
                        ));
        consumer.accept(TradeLootTables.UNCOMMON_TRADE_GOODS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(TodeCoinsTags.Items.PIGLIN_MERCHANT_UNCOMMON_GOODS))
                        ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_EQUIPMENT_SET,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_WEAPONS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_TOOLS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_BOOTS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_LEGGINGS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_CHESTPLATES_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DIAMOND_TIER_HELMETS_TABLE))
                        ));
        consumer.accept(TradeLootTables.RARE_BARTER_CURRENCY,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootItem.lootTableItem(Items.ENCHANTED_GOLDEN_APPLE))
                        ));
        consumer.accept(TradeLootTables.RARE_TRADE_GOODS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(TodeCoinsTags.Items.PIGLIN_MERCHANT_RARE_GOODS))
                        ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_EQUIPMENT_SET,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_WEAPONS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_TOOLS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_BOOTS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_LEGGINGS_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_CHESTPLATES_TABLE))
                                .add(LootTableReference.lootTableReference(TradeLootTables.NETHERITE_TIER_HELMETS_TABLE))
                        ));

        consumer.accept(ModBuiltInLootTables.PIGLIN_EVENT_BARTER_LOOT,
                LootTable.lootTable().withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                        .add(LootItem.lootTableItem(ModItems.BUBBLY_BERRY_CHOCOLATE_COIN.get()).when(EasterCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.ULTIMATE_DARK_CHOCOLATE_COIN.get()).when(HalloweenCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.MILK_BONE_CHOCOLATE_COIN.get()).when(HalloweenCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.WARPED_SPICE_CHOCOLATE_COIN.get()).when(HalloweenCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.CRIMSON_SPORE_CHOCOLATE_COIN.get()).when(HalloweenCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.VELVETY_CLOVER_CHOCOLATE_COIN.get()).when(BirthdayCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.FESTIVE_FUDGE_CHOCOLATE_COIN.get()).when(ChristmasCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.FUEGO_FUDGE_CHOCOLATE_COIN.get()).when(NewYearCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.CARMEL_CRISP_CHOCOLATE_COIN.get()).when(AnniversaryCondition.event()))
                        .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()))
                        .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()))
                        .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_EASTER_COIN_LOOT).when(EasterCondition.event()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_HALLOWEEN_COIN_LOOT).when(HalloweenCondition.event()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_CHRISTMAS_COIN_LOOT).when(ChristmasCondition.event()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_BIRTHDAY_COIN_LOOT).when(BirthdayCondition.event()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_ANNIVERSARY_COIN_LOOT).when(AnniversaryCondition.event()))
                        .add(LootTableReference.lootTableReference(ModBuiltInLootTables.TODECOINS_NEW_YEAR_COIN_LOOT).when(NewYearCondition.event()))
                        .add(LootItem.lootTableItem(Items.CAKE))
                        .add(LootItem.lootTableItem(Items.COOKIE))
                ));
        consumer.accept(ModBuiltInLootTables.ZOMBIE_PIGLIN_COIN_BARTER_LOOT,
                LootTable.lootTable().withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(Items.BOOK).setWeight(5)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.HEALING)))
                                .add(LootItem.lootTableItem(Items.SPLASH_POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.HEALING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.SPLASH_POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_AXE).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_SWORD).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.CROSSBOW).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.QUICK_CHARGE)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_HELMET).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_CHESTPLATE).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_LEGGINGS).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_BOOTS).setWeight(10)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                ));
        consumer.accept(ModBuiltInLootTables.COPPER_PIGLIN_COIN_BARTER_LOOT,
                LootTable.lootTable().withPool(
                        LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHER_CURRENCY_STAMP.get()).setWeight(10))
                                .add(LootItem.lootTableItem(Items.PIGLIN_BANNER_PATTERN).setWeight(10))
                                .add(LootItem.lootTableItem(Items.MUSIC_DISC_PIGSTEP).setWeight(10))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_STRENGTH)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_REGENERATION)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.INVISIBILITY)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_STRENGTH)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.SWIFTNESS)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_REGENERATION)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_SLOW_FALLING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(2)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.GHAST_TEAR).setWeight(2)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(1)
                                        .apply(SetPotionFunction.setPotion(Potions.LUCK)))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get().asItem()).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHER_STAR).setWeight(1).setQuality(6))
                                              ));
        consumer.accept(ModBuiltInLootTables.IRON_PIGLIN_COIN_BARTER_LOOT,
                LootTable.lootTable().withPool(
                        LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHER_CURRENCY_STAMP.get()).setWeight(10))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_SLOW_FALLING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.GHAST_TEAR).setWeight(1)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))))
                                .add(LootItem.lootTableItem(Items.LODESTONE).setWeight(1))
                                .add(LootItem.lootTableItem(Items.PIGLIN_BANNER_PATTERN).setWeight(1).setQuality(1))
                                .add(LootItem.lootTableItem(Items.MUSIC_DISC_PIGSTEP).setWeight(1).setQuality(2))
                                .add(LootItem.lootTableItem(Items.IRON_AXE).setWeight(1).setQuality(3)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.CROSSBOW).setWeight(1).setQuality(3)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.QUICK_CHARGE)))
                                .add(LootItem.lootTableItem(Items.IRON_SWORD).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.MOB_LOOTING)))
                                .add(LootItem.lootTableItem(Items.IRON_BOOTS).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SOUL_SPEED)))
                                .add(LootItem.lootTableItem(Items.IRON_HELMET).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(Items.IRON_LEGGINGS).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SWIFT_SNEAK)))
                                .add(LootItem.lootTableItem(Items.IRON_CHESTPLATE).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get().asItem()).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHER_STAR).setWeight(1).setQuality(6))
                                              ));
        consumer.accept(ModBuiltInLootTables.GOLD_PIGLIN_COIN_BARTER_LOOT,
                LootTable.lootTable().withPool(
                        LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHER_CURRENCY_STAMP.get()).setWeight(10))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_SLOW_FALLING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.GHAST_TEAR).setWeight(1)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))))
                                .add(LootItem.lootTableItem(Items.LODESTONE).setWeight(1))
                                .add(LootItem.lootTableItem(Items.PIGLIN_BANNER_PATTERN).setWeight(1).setQuality(1))
                                .add(LootItem.lootTableItem(Items.MUSIC_DISC_PIGSTEP).setWeight(1).setQuality(2))
                                .add(LootItem.lootTableItem(Items.DIAMOND_AXE).setWeight(1).setQuality(3)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.CROSSBOW).setWeight(1).setQuality(3)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.QUICK_CHARGE)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_SWORD).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.MOB_LOOTING)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_BOOTS).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SOUL_SPEED)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_HELMET).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_LEGGINGS).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.SWIFT_SNEAK)))
                                .add(LootItem.lootTableItem(Items.DIAMOND_CHESTPLATE).setWeight(1).setQuality(4)
                                        .apply((new EnchantRandomlyFunction.Builder()).withEnchantment(Enchantments.THORNS)))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get().asItem()).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHER_STAR).setWeight(1).setQuality(6))
                                              ));
        consumer.accept(ModBuiltInLootTables.NETHERITE_PIGLIN_COIN_BARTER_LOOT,
                LootTable.lootTable().withPool(
                        LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()).setWeight(20))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()))
                                .add(LootItem.lootTableItem(ModItems.NETHER_CURRENCY_STAMP.get()).setWeight(10))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_SLOW_FALLING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.STRONG_HEALING)))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(0)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.GHAST_TEAR).setWeight(0)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))))
                                .add(LootItem.lootTableItem(Items.LODESTONE).setWeight(0))
                                .add(LootItem.lootTableItem(Items.PIGLIN_BANNER_PATTERN).setWeight(1).setQuality(0))
                                .add(LootItem.lootTableItem(Items.MUSIC_DISC_PIGSTEP).setWeight(1).setQuality(0))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get().asItem()).setWeight(1).setQuality(1))
                                .add(LootItem.lootTableItem(Blocks.ANCIENT_DEBRIS).setWeight(1).setQuality(2))
                                .add(LootItem.lootTableItem(Items.NETHERITE_INGOT).setWeight(1).setQuality(3))
                                .add(LootItem.lootTableItem(Items.NETHERITE_SWORD).setWeight(1).setQuality(4))
                                .add(LootItem.lootTableItem(Items.NETHERITE_BOOTS).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHERITE_HELMET).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHERITE_LEGGINGS).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHERITE_CHESTPLATE).setWeight(1).setQuality(5))
                                .add(LootItem.lootTableItem(Items.NETHER_STAR).setWeight(1).setQuality(6))
                                              ));
        consumer.accept(ModBuiltInLootTables.NETHER_GOLD_COIN_PIGLIN_BARTERING,
                LootTable.lootTable().withPool(
                        LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .add(LootItem.lootTableItem(ModItems.COPPER_PIGLIN_COIN.get()).when(SpringCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.IRON_PIGLIN_COIN.get()).when(SummerCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.GOLD_PIGLIN_COIN.get()).when(AutumnCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(ModItems.NETHERITE_PIGLIN_COIN.get()).when(WinterCondition.season()).setWeight(4))
                                .add(LootItem.lootTableItem(Items.LODESTONE)
                                        .setWeight(5))
                                .add(LootItem.lootTableItem(Items.BOOK).setWeight(5)
                                        .apply((new EnchantRandomlyFunction.Builder())
                                                .withEnchantment(Enchantments.QUICK_CHARGE)))
                                .add(LootItem.lootTableItem(Items.BOOK).setWeight(5)
                                        .apply((new EnchantRandomlyFunction.Builder())
                                                .withEnchantment(Enchantments.SMITE)))
                                .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                        .setWeight(10)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1.0F, 2.0F))))
                                .add(LootItem.lootTableItem(Items.POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.SPLASH_POTION).setWeight(8)
                                        .apply(SetPotionFunction.setPotion(Potions.LONG_FIRE_RESISTANCE)))
                                .add(LootItem.lootTableItem(Items.CROSSBOW)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.GOLDEN_AXE)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.SADDLE)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.WARPED_FUNGUS_ON_A_STICK)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.MUSIC_DISC_PIGSTEP)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.PIGLIN_BANNER_PATTERN)
                                        .setWeight(10))
                                .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                        .setWeight(20))
                                .add(LootItem.lootTableItem(Items.CRIMSON_NYLIUM)
                                        .setWeight(40))
                                .add(LootItem.lootTableItem(Items.WARPED_NYLIUM)
                                        .setWeight(40))
                                .add(LootItem.lootTableItem(Items.SHROOMLIGHT)
                                        .setWeight(40))
                                .add(LootItem.lootTableItem(Items.RED_NETHER_BRICKS)
                                        .setWeight(40)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(2.0F, 8.0F))))
                                .add(LootItem.lootTableItem(Items.MUSHROOM_STEW)
                                        .setWeight(40))
                                .add(LootItem.lootTableItem(Items.NETHER_WART)
                                        .setWeight(40)
                                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(3.0F, 10.0F)))))
                       );
    }
}