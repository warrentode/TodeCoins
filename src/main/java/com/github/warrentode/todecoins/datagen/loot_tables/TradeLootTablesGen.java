package com.github.warrentode.todecoins.datagen.loot_tables;

import com.faboslav.friendsandfoes.init.FriendsAndFoesItems;
import com.github.warrentode.todecoins.block.ModBlocks;
import com.github.warrentode.todecoins.item.ModItems;
import com.github.warrentode.todecoins.loot.TradeLootTables;
import com.github.warrentode.todecoins.loot.conditions.ModCheckCondition;
import com.github.warrentode.todecoins.util.tags.ForgeTags;
import com.github.warrentode.todecoins.util.tags.ModTags;
import net.mehvahdjukaar.cagerium.Cagerium;
import net.minecraft.data.loot.ChestLoot;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.LootTableReference;
import net.minecraft.world.level.storage.loot.entries.TagEntry;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceCondition;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraftforge.common.Tags;
import org.jetbrains.annotations.NotNull;

import java.util.function.BiConsumer;

import static com.github.warrentode.todecoins.datagen.ModLootTableGenProvider.*;

public class TradeLootTablesGen extends ChestLoot {
    @Override
    public void accept(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        consumer.accept(TradeLootTables.TWENTY_SEVEN_LUCKY_COIN_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHERITE_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.NETHERITE_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.NETHERITE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BUDDING_AMETHYST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.NETHER_STAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(23))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_THREAD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FABRIC.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.EMERALD_HALF_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.EMERALD_QUARTER_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                ));
        consumer.accept(TradeLootTables.THREE_LUCKY_COIN_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.BUDDING_AMETHYST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .when(LootItemRandomChanceCondition.randomChance(0.000001F))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(28))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(57))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(57))))
                        .add(LootItem.lootTableItem(Items.NETHER_STAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .when(LootItemRandomChanceCondition.randomChance(0.000001F))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.OCHRE_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.VERDANT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PEARLESCENT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.FOUR_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHERITE_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.SINGLE_LUCKY_COIN_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(38))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                ));
        consumer.accept(TradeLootTables.SINGLE_LUCKY_COIN_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                ));
        consumer.accept(TradeLootTables.SEVEN_NETHERITE_COIN_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get())
                                .when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                ));
        consumer.accept(TradeLootTables.ONE_LUCKY_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SINGLE_LUCKY_COIN_BAG_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_HALF_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                ));
        consumer.accept(TradeLootTables.THIRTY_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_SMOOTH_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SHULKER_SHELL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FRUIT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.THIRTY_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(TradeLootTables.THIRTY_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(15))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(TradeLootTables.SIXTY_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_SMOOTH_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SHULKER_SHELL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DRAGON_HEAD)
                                .when(LootItemRandomChanceCondition.randomChance(0.001F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ELYTRA)
                                .when(LootItemRandomChanceCondition.randomChance(0.001F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FRUIT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(TradeLootTables.SIXTY_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.SIXTY_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.FOUR_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.FOUR_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(Items.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.IRON_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT)
                                .when(LootItemRandomChanceCondition.randomChance(0.10F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MAGMA_CREAM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.TWO_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Blocks.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(Items.STRING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT)
                                .when(LootItemRandomChanceCondition.randomChance(0.10F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.TWO_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Blocks.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.THIRTY_POTS_OF_GOLD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                ));
        consumer.accept(TradeLootTables.FOUR_POTS_OF_GOLD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.TWO_POTS_OF_GOLD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.TWO_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get().asItem()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get().asItem()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.EMERALD_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.EMERALD_BANK_NOTE_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(13))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                ));
        consumer.accept(TradeLootTables.EMERALD_BANK_NOTE_VALUE_METALS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.IRON_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(28))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_NUGGET.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_INGOT.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.THREE_EMERALD_VALUE_GOLD,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SINGLE_EMERALD_VALUE_GOLD,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.GOLD_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(Items.GOLD_NUGGET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.SINGLE_EMERALD_VALUE_METALS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_NUGGET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.GOLD_NUGGET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.SINGLE_EMERALD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.ENCHANTING_GEMS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.PRISMARINE_SHARD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.EQUIPMENT_GEMS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FIVE_EMERALD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.EMERALD))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5)))
                ));
        consumer.accept(TradeLootTables.FIFTY_ENDONIAN_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(50))))
                ));
        consumer.accept(TradeLootTables.THIRTY_TWO_ENDONIAN_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                ));
        consumer.accept(TradeLootTables.FOURTEEN_ENDONIAN_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                ));
        consumer.accept(TradeLootTables.FIVE_ENDONIAN_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(TradeLootTables.ENDONIAN_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.THREE_NETHER_GOLD_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.NINE_NETHER_GOLD_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                ));
        consumer.accept(TradeLootTables.EIGHTEEN_NETHERITE_COIN_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHERITE_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_HALF_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.FORTY_TWO_NETHER_GOLD_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                ));
        consumer.accept(TradeLootTables.THIRTY_NETHER_GOLD_COIN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                ));
        consumer.accept(TradeLootTables.SINGLE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SIXTY_FOUR_EMERALD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                ));
        consumer.accept(TradeLootTables.THIRTY_TWO_EMERALD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                ));
        consumer.accept(TradeLootTables.SIXTEEN_EMERALD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                ));
        consumer.accept(TradeLootTables.ONE_EMERALD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SMALLEST_COIN,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.COPPER_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.TWO_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.FIVE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(40))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(15))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(TradeLootTables.SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.NINE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(60))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.EIGHT_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                ));
        consumer.accept(TradeLootTables.SEVEN_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(56))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                ));
        consumer.accept(TradeLootTables.FOUR_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.THIRTY_SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.THREE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.TWENTY_SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(17))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                ));
        consumer.accept(TradeLootTables.TWENTY_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(13))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                ));
        consumer.accept(TradeLootTables.FOURTEEN_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                ));
        consumer.accept(TradeLootTables.TAGGED_RAW_MEATS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.RAW_MEATS))
                ));
        consumer.accept(TradeLootTables.TAGGED_MEAT_SOUPS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.MEAT_SOUPS))
                ));
        consumer.accept(TradeLootTables.TAGGED_COOKED_MEATS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKED_MEATS))
                ));
        consumer.accept(TradeLootTables.TAGGED_SALTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SALTS))
                ));
        consumer.accept(TradeLootTables.STONE_TIER_KNIVES,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.FLINT_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.TAGGED_ASH_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.ASH))
                ));
        consumer.accept(TradeLootTables.TAGGED_FOX_FOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.FOX_FOOD))
                ));
        consumer.accept(TradeLootTables.TAGGED_GLASS_PANES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(Tags.Items.GLASS_PANES))
                ));
        consumer.accept(TradeLootTables.TAGGED_BANNER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.BANNERS))
                ));
        consumer.accept(TradeLootTables.TAGGED_CANDLE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.CANDLES))
                ));
        consumer.accept(TradeLootTables.BEE_EGG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BEE_SPAWN_EGG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.BEEHIVE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BEE_NEST))
                        .add(LootItem.lootTableItem(Items.BEEHIVE))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.ACACIA_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_ACACIA))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.BIRCH_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_BIRCH))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.CRIMSON_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_CRIMSON_FUNGUS))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.WARPED_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_WARPED_FUNGUS))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.DARK_OAK_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_DARK_OAK))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.JUNGLE_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_JUNGLE))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.MANGROVE_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_MANGROVE))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.SPRUCE_BEEHIVE.get())
                                .when(ModCheckCondition.mod().isLoaded("friendsandfoes"))
                                .when(HAS_SPRUCE))
                ));
        consumer.accept(TradeLootTables.TAGGED_VEGGIES_AND_GRAINS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_VEGETABLES))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_GRAINS))
                ));
        consumer.accept(TradeLootTables.TAGGED_BREADS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.BREAD))
                ));
        consumer.accept(TradeLootTables.TAGGED_GOURDS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.GOURDS))
                ));
        consumer.accept(TradeLootTables.TAGGED_PIES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.PIES))
                ));
        consumer.accept(TradeLootTables.TAGGED_FRUITS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_FRUIT))
                ));
        consumer.accept(TradeLootTables.TAGGED_COOKIES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKIES))
                ));
        consumer.accept(TradeLootTables.TAGGED_CAKES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CAKES))
                ));
        consumer.accept(TradeLootTables.TAGGED_PREPARED_SEAFOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKED_FISHES))
                        .add(TagEntry.expandTag(ForgeTags.Items.FISH_SOUPS))
                        .add(TagEntry.expandTag(ForgeTags.Items.SUSHI))
                ));
        consumer.accept(TradeLootTables.TAGGED_RAW_SEAFOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.RAW_FISHES))
                ));
        consumer.accept(TradeLootTables.BELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BELL))
                ));
        consumer.accept(TradeLootTables.FLINT_BUY_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FLINT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                ));
        consumer.accept(TradeLootTables.FLINT_SELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FLINT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.ANVIL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.ANVIL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SHEARS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SHEARS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.PAPER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.PAPER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                ));
        consumer.accept(TradeLootTables.REFRESH_BOOK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ModTags.Items.REFRESH_BOOK)
                                .when(ModCheckCondition.mod().isLoaded("villager_enchanter")))
                ));
        consumer.accept(TradeLootTables.BOOK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BOOK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.WRITABLE_BOOK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(TagEntry.expandTag(ModTags.Items.BOOKSTACK)
                                .when(ModCheckCondition.mod().isLoaded("beautify")))
                ));
        consumer.accept(TradeLootTables.CLOCK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.COMPASS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COMPASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SCUTE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SCUTE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.SADDLE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SADDLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SEA_LANTERN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.OCEAN_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SPONGE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DARK_PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.GRAVEL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GRAVEL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.FEATHER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FEATHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                ));
        consumer.accept(TradeLootTables.TRIPWIRE_HOOK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.TRIPWIRE_HOOK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                ));
        consumer.accept(TradeLootTables.BLANK_MAP_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.MAP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.BANNER_PATTERN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GLOBE_BANNER_PATTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.DECOR_PLANTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.VINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.BIG_DRIPLEAF)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.SMALL_DRIPLEAF)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.LILY_PAD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.FERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.LARGE_FERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.CACTUS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GLOW_LICHEN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SPORE_BLOSSOM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SUGAR_CANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GRASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.TALL_GRASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootTableReference.lootTableReference(TradeLootTables.TAGGED_FOX_FOOD_TABLE))
                        .add(LootItem.lootTableItem(Items.AZALEA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.FLOWERING_AZALEA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.HANGING_ROOTS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.FRAMES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootTableReference.lootTableReference(TradeLootTables.ITEM_FRAME_TABLE))
                        .add(TagEntry.expandTag(ModTags.Items.PICTURE_FRAMES)
                                .when(ModCheckCondition.mod().isLoaded("beautify")))
                ));
        consumer.accept(TradeLootTables.TRELLIS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ModTags.Items.TRELLIS)
                                .when(ModCheckCondition.mod().isLoaded("beautify")))
                ));
        consumer.accept(TradeLootTables.FLOWER_POT_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FLOWER_POT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(TagEntry.expandTag(ModTags.Items.FLOWER_BOX)
                                .when(ModCheckCondition.mod().isLoaded("supplementaries")))
                        .add(TagEntry.expandTag(ModTags.Items.HANGING_POT)
                                .when(ModCheckCondition.mod().isLoaded("beautify")))
                ));
        consumer.accept(TradeLootTables.FLOWER_BUY_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SUNFLOWER).when(HAS_SUNFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PEONY).when(HAS_PEONY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ROSE_BUSH).when(HAS_ROSE_BUSH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILAC).when(HAS_LILAC)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.BUTTERCUP.get()).when(HAS_BUTTERCUP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILY_OF_THE_VALLEY).when(HAS_LILY_OF_THE_VALLEY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.CORNFLOWER).when(HAS_CORNFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.OXEYE_DAISY).when(HAS_OXEYE_DAISY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PINK_TULIP).when(HAS_PINK_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.WHITE_TULIP).when(HAS_WHITE_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ORANGE_TULIP).when(HAS_ORANGE_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.RED_TULIP).when(HAS_RED_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.AZURE_BLUET).when(HAS_AZURE_BLUET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ALLIUM).when(HAS_ALLIUM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.BLUE_ORCHID).when(HAS_BLUE_ORCHID)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.POPPY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.DANDELION)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                ));
        consumer.accept(TradeLootTables.FLOWER_SELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SUNFLOWER).when(HAS_SUNFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PEONY).when(HAS_PEONY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ROSE_BUSH).when(HAS_ROSE_BUSH.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILAC).when(HAS_LILAC.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.BUTTERCUP.get()).when(HAS_BUTTERCUP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILY_OF_THE_VALLEY).when(HAS_LILY_OF_THE_VALLEY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.CORNFLOWER).when(HAS_CORNFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.OXEYE_DAISY).when(HAS_OXEYE_DAISY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PINK_TULIP).when(HAS_PINK_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.WHITE_TULIP).when(HAS_WHITE_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ORANGE_TULIP).when(HAS_ORANGE_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.RED_TULIP).when(HAS_RED_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.AZURE_BLUET).when(HAS_AZURE_BLUET.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ALLIUM).when(HAS_ALLIUM.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.BLUE_ORCHID).when(HAS_BLUE_ORCHID.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.POPPY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.DANDELION)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                ));
        consumer.accept(TradeLootTables.SAPLING_BUY_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SPRUCE_SAPLING).when(HAS_SPRUCE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MANGROVE_PROPAGULE).when(HAS_MANGROVE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ACACIA_SAPLING).when(HAS_ACACIA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.JUNGLE_SAPLING).when(HAS_JUNGLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BIRCH_SAPLING).when(HAS_BIRCH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_SAPLING).when(HAS_DARK_OAK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.OAK_SAPLING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SAPLING_SELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SPRUCE_SAPLING).when(HAS_SPRUCE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MANGROVE_PROPAGULE).when(HAS_MANGROVE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ACACIA_SAPLING).when(HAS_ACACIA.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.JUNGLE_SAPLING).when(HAS_JUNGLE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BIRCH_SAPLING).when(HAS_BIRCH.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_SAPLING).when(HAS_DARK_OAK.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.OAK_SAPLING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FEAST_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModBlocks.HONEY_GLAZED_HAM_BLOCK.get()))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModBlocks.RICE_ROLL_MEDLEY_BLOCK.get()))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModBlocks.ROAST_CHICKEN_BLOCK.get()))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModBlocks.SHEPHERDS_PIE_BLOCK.get()))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModBlocks.STUFFED_PUMPKIN_BLOCK.get()))
                ));
        consumer.accept(TradeLootTables.COFFEE_INGREDIENTS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.KAWAII_COFFEE_INGREDIENTS)
                                .when(ModCheckCondition.mod().isLoaded("kawaiidishes")))
                ));
        consumer.accept(TradeLootTables.DRINKS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.KAWAII_DRINKS)
                                .when(ModCheckCondition.mod().isLoaded("kawaiidishes")))
                        .add(TagEntry.expandTag(ForgeTags.Items.FAST_FOOD_DRINKS)
                                .when(ModCheckCondition.mod().isLoaded("fastfooddelight")))
                        .add(TagEntry.expandTag(ForgeTags.Items.DRINKS))
                ));
        consumer.accept(TradeLootTables.DESSERT_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.KAWAII_DESSERTS)
                                .when(ModCheckCondition.mod().isLoaded("kawaiidishes")))
                        .add(TagEntry.expandTag(ForgeTags.Items.FAST_FOOD_DESSERTS)
                                .when(ModCheckCondition.mod().isLoaded("fastfooddelight")))
                        .add(TagEntry.expandTag(ForgeTags.Items.DESSERTS))
                ));
        consumer.accept(TradeLootTables.PLATED_FOODS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.PLATED_FOODS))
                ));
        consumer.accept(TradeLootTables.SOUP_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SOUPS))
                ));
        consumer.accept(TradeLootTables.SIDE_DISH_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.FAST_FOOD_SIDE_DISHES)
                                .when(ModCheckCondition.mod().isLoaded("fastfooddelight")))
                        .add(TagEntry.expandTag(ForgeTags.Items.SIDE_DISHES))
                ));
        consumer.accept(TradeLootTables.SANDWICH_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.FAST_FOOD_SANDWICHES)
                                .when(ModCheckCondition.mod().isLoaded("fastfooddelight")))
                        .add(TagEntry.expandTag(ForgeTags.Items.SANDWICHES))
                ));
        consumer.accept(TradeLootTables.INGREDIENTS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.INGREDIENTS))
                ));
        consumer.accept(TradeLootTables.SEED_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SEEDS))
                ));
        consumer.accept(TradeLootTables.TEN_EMERALD_VALUE_MOB_PARTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MAGMA_CREAM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FIVE_EMERALD_VALUE_MOB_PARTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SLIMEBALL_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SLIMEBALLS))
                ));
        consumer.accept(TradeLootTables.SAND_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SAND))
                ));
        consumer.accept(TradeLootTables.SEASHELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NAUTILUS_SHELL))
                ));
        consumer.accept(TradeLootTables.ICE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SNOW_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.PACKED_ICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.BLUE_ICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.DISC_FRAGMENTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DISC_FRAGMENT_5))
                ));
        consumer.accept(TradeLootTables.CORAL_BLOCK_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CORAL_BLOCKS))
                ));
        consumer.accept(TradeLootTables.MUSIC_DISC_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.MUSIC_DISCS))
                ));
        consumer.accept(TradeLootTables.RECYCLABLE_GLASS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.RECYCLABLE_GLASS))
                ));
        consumer.accept(TradeLootTables.GLASSBLOWING_TOOLS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.GLASSBLOWER_TOOLS))
                ));
        consumer.accept(TradeLootTables.SPECIAL_DIRT_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.MUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.COARSE_DIRT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PODZOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.ROOTED_DIRT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.MOSS_BLOCK)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.MYCELIUM)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.BOTTLED_HONEY_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.HONEY_BOTTLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.HONEY_BLOCK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.HONEY_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.HONEY_COMB_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.HONEYCOMB)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.HONEYCOMB)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SHIELD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SHIELD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.ITEM_FRAME_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.ITEM_FRAME)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.GLOW_ITEM_FRAME)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.EXPERIENCE_BOTTLE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.EXPERIENCE_BOTTLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.GHAST_TEAR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.NETHER_WART_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHER_WART)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                ));
        consumer.accept(TradeLootTables.FIVE_EMERALD_VALUE_POTION_INGREDIENTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SLIMEBALLS))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.TEN_EMERALD_VALUE_POTION_INGREDIENTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MAGMA_CREAM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.ONE_EMERALD_VALUE_POTION_INGREDIENTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SUGAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.FERMENTED_SPIDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SPIDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(Items.PUFFERFISH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SCUTE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT).when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH).when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.NETHER_WART)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                ));
        consumer.accept(TradeLootTables.GLASS_BOTTLE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GLASS_BOTTLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                ));
        consumer.accept(TradeLootTables.ONE_EMERALD_VALUE_MOB_PARTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER))
                        .add(LootItem.lootTableItem(Items.SPIDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(Items.BONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(Items.ROTTEN_FLESH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.GOLDEN_FOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_CARROT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.GLISTERING_MELON_SLICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.GOLDEN_APPLE).when(BIRTHDAY_EVENT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.CAMPFIRE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CAMPFIRE).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SOUL_CAMPFIRE).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SOUL_LIGHTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SOUL_TORCH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.SOUL_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SOUL_CAMPFIRE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FISH_BUCKET_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.TADPOLE_BUCKET).when(HAS_FROGS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.AXOLOTL_BUCKET).when(HAS_AXOLOTL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.TROPICAL_FISH_BUCKET).when(HAS_TROPICAL_FISH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PUFFERFISH_BUCKET).when(HAS_PUFFERFISH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SALMON_BUCKET).when(HAS_SALMON)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.COD_BUCKET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.DRAGON_BREATH_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.NINE_EMERALD_VALUE_REDSTONE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                ));
        consumer.accept(TradeLootTables.REDSTONE_COMPONENTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REPEATER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DROPPER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DISPENSER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_LAMP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.OBSERVER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.COMPARATOR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.PISTON)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.STICKY_PISTON)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DAYLIGHT_DETECTOR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.HOPPER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.POISONOUS_POTATO_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.POISONOUS_POTATO)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.REDSTONE_TORCH_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_TORCH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(TradeLootTables.LEAVES_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.LEAVES))
                ));
        consumer.accept(TradeLootTables.ENCHANTABLE_PET_GEAR_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.ENCHANTABLE_PET_GEAR))
                ));
        consumer.accept(TradeLootTables.PET_SUPPLIES_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ModTags.Items.PET_BEDS))
                        .add(TagEntry.expandTag(ForgeTags.Items.PET_SUPPLIES))
                ));
        consumer.accept(TradeLootTables.CUPS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GLASS_BOTTLE))
                        .add(TagEntry.expandTag(ForgeTags.Items.KAWAII_CUPS))
                ));
        consumer.accept(TradeLootTables.COOKING_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.TOOLS_KNIVES))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.CUTTING_BOARD.get()))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.COOKING_POT.get()))
                ));
        consumer.accept(TradeLootTables.TEXTILES_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.LEATHER_TEXTILES))
                        .add(TagEntry.expandTag(ForgeTags.Items.FIBRE))
                        .add(TagEntry.expandTag(ForgeTags.Items.STRING))
                        .add(TagEntry.expandTag(ForgeTags.Items.FABRIC))
                        .add(TagEntry.expandTag(ForgeTags.Items.THREAD))
                ));
        consumer.accept(TradeLootTables.PATTERNS_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ModTags.Items.PATTERNS))
                ));
        consumer.accept(TradeLootTables.TAILOR_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ModTags.Items.NEEDLES))
                        .add(TagEntry.expandTag(ModTags.Items.FILE))
                ));
        consumer.accept(TradeLootTables.NAME_TAG_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NAME_TAG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.BONE_MEAL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BONE_MEAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(TradeLootTables.DRAGON_HEAD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DRAGON_HEAD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.SHULKER_SHELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SHULKER_SHELL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FIREWORK_ROCKET_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FIREWORK_ROCKET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.ENDER_PEARL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.END_ROD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.END_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.NETHER_STAR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHER_STAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.HEART_OF_THE_SEA_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.HEART_OF_THE_SEA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.CLAY_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CLAY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CLAY_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.ONE_EMERALD_VALUE_FUEL,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.COAL_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.CHARCOAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.LAVA_BUCKET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DRIED_KELP_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(TradeLootTables.FISHING_GEAR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FISHING_ROD))
                        .add(LootItem.lootTableItem(Items.ACACIA_BOAT)
                                .when(HAS_ACACIA))
                        .add(LootItem.lootTableItem(Items.BIRCH_BOAT)
                                .when(HAS_BIRCH))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_BOAT)
                                .when(HAS_DARK_OAK))
                        .add(LootItem.lootTableItem(Items.JUNGLE_BOAT)
                                .when(HAS_JUNGLE))
                        .add(LootItem.lootTableItem(Items.MANGROVE_BOAT)
                                .when(HAS_MANGROVE))
                        .add(LootItem.lootTableItem(Items.SPRUCE_BOAT)
                                .when(HAS_SPRUCE))
                        .add(LootItem.lootTableItem(Items.OAK_BOAT))
                        .add(TagEntry.expandTag(ForgeTags.Items.CRAB_TRAP))
                ));
        consumer.accept(TradeLootTables.FISHING_ROD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FISHING_ROD))
                ));

        consumer.accept(TradeLootTables.LEATHER_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_HELMET))
                ));
        consumer.accept(TradeLootTables.CHAINMAIL_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_HELMET))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_HELMET))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HELMET))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HELMET))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_HELMET))
                ));

        consumer.accept(TradeLootTables.LEATHER_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_CHESTPLATE))
                ));
        consumer.accept(TradeLootTables.CHAINMAIL_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_CHESTPLATE))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_CHESTPLATE))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_CHESTPLATE))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_CHESTPLATE))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_CHESTPLATE))
                ));

        consumer.accept(TradeLootTables.LEATHER_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.CHAINMAIL_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_LEGGINGS))
                ));

        consumer.accept(TradeLootTables.LEATHER_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_BOOTS))
                ));
        consumer.accept(TradeLootTables.CHAINMAIL_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_BOOTS))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_BOOTS))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_BOOTS))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BOOTS))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_BOOTS))
                ));
        consumer.accept(TradeLootTables.DYEABLE_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.DYEABLE_HELMETS))
                ));
        consumer.accept(TradeLootTables.DYEABLE_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.DYEABLE_CHESTPLATES))
                ));
        consumer.accept(TradeLootTables.DYEABLE_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.DYEABLE_LEGGINGS))
                ));
        consumer.accept(TradeLootTables.DYEABLE_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.DYEABLE_BOOTS))
                ));
        consumer.accept(TradeLootTables.TRIDENT_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.TRIDENT))
                ));
        consumer.accept(TradeLootTables.BOWS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BOW))
                        .add(LootItem.lootTableItem(Items.CROSSBOW))
                ));
        consumer.accept(TradeLootTables.TAGGED_QUIVERS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.QUIVERS))
                ));
        consumer.accept(TradeLootTables.TAGGED_LEATHER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.LEATHER))
                ));
        consumer.accept(TradeLootTables.LEATHER_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_HORSE_ARMOR))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_HORSE_ARMOR))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HORSE_ARMOR))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HORSE_ARMOR))
                ));
        consumer.accept(TradeLootTables.BOOKSHELF_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BOOKSHELF))
                ));
        consumer.accept(TradeLootTables.TORCH_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.TORCH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                ));
        consumer.accept(TradeLootTables.LANTERN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LANTERN))
                ));
        consumer.accept(TradeLootTables.TAGGED_GLASS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(Tags.Items.GLASS))
                ));
        consumer.accept(TradeLootTables.TAGGED_INK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.INK))
                ));
        consumer.accept(TradeLootTables.TAGGED_DYES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.DYES))
                ));
        consumer.accept(TradeLootTables.TAGGED_STICK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.STICKS))
                ));
        consumer.accept(TradeLootTables.TAGGED_STRING_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.STRING))
                ));
        consumer.accept(TradeLootTables.TAGGED_WOOL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.WOOL))
                ));
        consumer.accept(TradeLootTables.TAGGED_WOOL_CARPETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.WOOL_CARPETS))
                ));
        consumer.accept(TradeLootTables.TAGGED_BEDS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.BEDS))
                ));
        consumer.accept(TradeLootTables.GUIDE_BOOKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.INK))
                ));
        consumer.accept(TradeLootTables.PAINTINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.PAINTING))
                ));
        consumer.accept(TradeLootTables.STONE_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.STONE_PICKAXE))
                        .add(LootItem.lootTableItem(Items.STONE_AXE))
                        .add(LootItem.lootTableItem(Items.STONE_SHOVEL))
                        .add(LootItem.lootTableItem(Items.STONE_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.FLINT_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_LUMBER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_AXE))
                        .add(LootItem.lootTableItem(Items.SHEARS))
                        .add(LootItem.lootTableItem(Items.IRON_HOE))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_LUMBER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_AXE))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HOE))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_PICKAXE))
                        .add(LootItem.lootTableItem(Items.IRON_AXE))
                        .add(LootItem.lootTableItem(Items.IRON_SHOVEL))
                        .add(LootItem.lootTableItem(Items.IRON_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.IRON_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.IRON_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_SWORD))
                        .add(LootItem.lootTableItem(Items.IRON_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.IRON_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_SWORD))
                        .add(LootItem.lootTableItem(Items.GOLDEN_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.GOLDEN_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_SWORD))
                        .add(LootItem.lootTableItem(Items.DIAMOND_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.DIAMOND_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_SWORD))
                        .add(LootItem.lootTableItem(Items.NETHERITE_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.NETHERITE_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.GOLD_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_PICKAXE))
                        .add(LootItem.lootTableItem(Items.GOLDEN_AXE))
                        .add(LootItem.lootTableItem(Items.GOLDEN_SHOVEL))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.GOLDEN_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.DIAMOND_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_PICKAXE))
                        .add(LootItem.lootTableItem(Items.DIAMOND_AXE))
                        .add(LootItem.lootTableItem(Items.DIAMOND_SHOVEL))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.DIAMOND_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.NETHERITE_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_PICKAXE))
                        .add(LootItem.lootTableItem(Items.NETHERITE_AXE))
                        .add(LootItem.lootTableItem(Items.NETHERITE_SHOVEL))
                        .add(LootItem.lootTableItem(Items.NETHERITE_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.NETHERITE_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(TradeLootTables.OVERWORLD_BRICK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BRICK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.OVERWORLD_STONE_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.GRANITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.ANDESITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.DIORITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.SANDSTONE).when(HAS_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.RED_SANDSTONE).when(HAS_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                ));
        consumer.accept(TradeLootTables.OVERWORLD_BRICK_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.MOSSY_COBBLESTONE).when(HAS_MOSSY_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.MOSSY_STONE_BRICKS).when(HAS_MOSSY_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.MUD_BRICKS).when(HAS_MUD)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_SANDSTONE).when(HAS_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_RED_SANDSTONE).when(HAS_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                ));
        consumer.accept(TradeLootTables.OVERWORLD_POLISHED_STONE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.POLISHED_GRANITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_ANDESITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_DIORITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_SANDSTONE).when(HAS_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_RED_SANDSTONE).when(HAS_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.TERRACOTTA_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.TERRACOTTA))
                ));
        consumer.accept(TradeLootTables.LOGS_SELL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SPRUCE_LOG).when(HAS_SPRUCE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.MANGROVE_LOG).when(HAS_MANGROVE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ACACIA_LOG).when(HAS_ACACIA.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.JUNGLE_LOG).when(HAS_JUNGLE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.BIRCH_LOG).when(HAS_BIRCH.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_LOG).when(HAS_DARK_OAK.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.CRIMSON_STEM)
                                .when(IN_NETHER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.WARPED_STEM)
                                .when(IN_NETHER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.OAK_LOG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.LOGS_BUY_TABLE, LootTable.lootTable()
                .withPool(LootPool.lootPool().
                        setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SPRUCE_LOG).when(HAS_SPRUCE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.MANGROVE_LOG).when(HAS_MANGROVE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ACACIA_LOG).when(HAS_ACACIA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.JUNGLE_LOG).when(HAS_JUNGLE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.BIRCH_LOG).when(HAS_BIRCH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_LOG).when(HAS_DARK_OAK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.CRIMSON_STEM)
                                .when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.WARPED_STEM)
                                .when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.OAK_LOG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                )
        );
        consumer.accept(TradeLootTables.END_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.END_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.END_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.PURPUR_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.PURPUR_PILLAR)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                ));
        consumer.accept(TradeLootTables.NETHER_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_PILLAR)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CHISELED_QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_QUARTZ)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.CHISELED_POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BLACKSTONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_WART_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.NETHER_WART_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_NYLIUM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_NYLIUM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.OBSIDIAN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.CRYING_OBSIDIAN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.NETHERRACK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Blocks.NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Blocks.CRACKED_NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Blocks.RED_NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_STEM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_STEM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(TradeLootTables.GLAZED_TERRACOTTA_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.GLAZED_TERRACOTTA))
                ));
        consumer.accept(TradeLootTables.OVERWORLD_OTHER_STONE_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DRIPSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CALCITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.TUFF)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE_TILES)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                ));

        consumer.accept(TradeLootTables.WANDERING_TRADER_RARE_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootItem.lootTableItem(Items.GUNPOWDER))
                        ));
        consumer.accept(TradeLootTables.WANDERING_TRADER_COMMON_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(LootItem.lootTableItem(Items.KELP))
                                .add(LootItem.lootTableItem(Items.SEA_PICKLE))
                                .add(LootItem.lootTableItem(Items.RED_MUSHROOM))
                                .add(LootItem.lootTableItem(Items.BROWN_MUSHROOM))
                                .add(LootTableReference.lootTableReference(TradeLootTables.DECOR_PLANTS_TABLE))
                                .add(LootItem.lootTableItem(Items.POINTED_DRIPSTONE)
                                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                                .add(LootItem.lootTableItem(Items.MOSS_BLOCK)
                                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        ));

        consumer.accept(TradeLootTables.NUMISMATIST_RARE_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(ItemTags.MUSIC_DISCS))
                                .add(TagEntry.expandTag(ModTags.Items.SOUL_BINDER))
                                .add(LootItem.lootTableItem(Items.HEART_OF_THE_SEA))
                                .add(LootItem.lootTableItem(Items.ENCHANTED_GOLDEN_APPLE))
                                .add(LootItem.lootTableItem(Items.MOJANG_BANNER_PATTERN))
                                .add(LootItem.lootTableItem(Items.TOTEM_OF_UNDYING))
                                .add(LootItem.lootTableItem(Items.DRAGON_BREATH))
                                .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK))
                                .add(LootItem.lootTableItem(Items.ELYTRA))
                                .add(LootItem.lootTableItem(Cagerium.TERRARIUM_BASE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.CAGE_BASE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.PLATE_GEM.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.FIRE_UPGRADE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.TOTEM_OF_ILLUSION.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.TOTEM_OF_FREEZING.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.WILDFIRE_CROWN_FRAGMENT.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                        ));
        consumer.accept(TradeLootTables.NUMISMATIST_CONTAINER_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(ModTags.Items.SHULKER_BOXES))
                                .add(TagEntry.expandTag(ModTags.Items.WALLETS))
                                .add(LootItem.lootTableItem(Items.ENDER_CHEST))
                        ));
    }
}