package com.github.warrentode.todecoins.datagen.tags;

import biomesoplenty.api.block.BOPBlocks;
import com.aetherteam.aether.item.AetherItems;
import com.github.talrey.createdeco.ItemRegistry;
import com.github.warrentode.todecoins.block.TCBlocks;
import com.github.warrentode.todecoins.item.TCItems;
import com.github.warrentode.todecoins.util.tags.TCItemTags;
import net.mcreator.festivedelight.init.FestiveDelightModItems;
import net.minecraft.core.HolderLookup;
import net.minecraft.data.PackOutput;
import net.minecraft.data.tags.ItemTagsProvider;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Block;
import net.minecraftforge.common.Tags;
import net.minecraftforge.common.data.ExistingFileHelper;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import slimeknights.tconstruct.common.TinkerTags;
import slimeknights.tconstruct.fluids.TinkerFluids;
import umpaz.farmersrespite.common.registry.FRItems;
import vectorwing.farmersdelight.common.registry.ModItems;

import java.util.Objects;
import java.util.concurrent.CompletableFuture;

import static net.minecraft.world.item.Items.SHROOMLIGHT;

public class ItemTagsGen extends ItemTagsProvider {
    public ItemTagsGen(PackOutput output, CompletableFuture<HolderLookup.Provider> provider, CompletableFuture<TagLookup<Block>> blockTagProvider, String modid, @Nullable ExistingFileHelper existingFileHelper) {
        super(output, provider, blockTagProvider, modid, existingFileHelper);
    }

    @Override
    protected final void addTags(HolderLookup.@NotNull Provider lookupProvider) {
        addCollectibleCoinTags();
        addFoodTags();
        addBarterTags();
        addCraftingTags();
        addEquipmentTags();
        addToolTags();
        addCurioTags();
        addTradingTags();
        addNoAIEggTags();
        addCraftingRemainderTags();
    }

    private void addCraftingRemainderTags() {
        tag(TCItemTags.BUCKET_REMAINDERS)
                .add(Items.TROPICAL_FISH_BUCKET)
                .add(Items.SALMON_BUCKET)
                .add(Items.PUFFERFISH_BUCKET)
                .add(Items.COD_BUCKET)
                .add(Items.AXOLOTL_BUCKET)
                .add(Items.POWDER_SNOW_BUCKET)
                .add(Items.WATER_BUCKET)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.beetrootSoup.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.earthSlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.skySlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.enderSlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.magma.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.honey.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.mushroomStew.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.rabbitStew.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.potion.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.blazingBlood.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.liquidSoul.asItem().toString())));
        tag(TCItemTags.MATCHING_ITEM_REMAINDERS)
                .addTag(TCItemTags.COLLECTIBLE_COINS_TAG)
                .addTag(TCItemTags.TOOLS_SEWING)
                .addTag(TCItemTags.TOOLS_CARVING)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse(
                        "todevillagers:glassblower_tools")))
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse(
                        "todecoins:currency_stamps")));
        tag(TCItemTags.BOTTLE_REMAINDERS)
                .add(Items.EXPERIENCE_BOTTLE)
                .add(Items.LINGERING_POTION)
                .add(Items.SPLASH_POTION)
                .add(Items.POTION)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.venomBottle.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.magmaBottle.asItem().toString())));
        tag(TCItemTags.BOWL_REMAINDERS)
                .addTag(TCItemTags.SOUPS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.meatSoupBowl.asItem().toString())));
    }

    private void addNoAIEggTags() {
        tag(TCItemTags.NO_AI_EGGS)
                .add(Items.BLAZE_SPAWN_EGG)
                .add(Items.CAVE_SPIDER_SPAWN_EGG)
                .add(Items.CREEPER_SPAWN_EGG)
                .add(Items.DROWNED_SPAWN_EGG)
                .add(Items.ELDER_GUARDIAN_SPAWN_EGG)
                .add(Items.ENDERMAN_SPAWN_EGG)
                .add(Items.ENDERMITE_SPAWN_EGG)
                .add(Items.EVOKER_SPAWN_EGG)
                .add(Items.GHAST_SPAWN_EGG)
                .add(Items.GUARDIAN_SPAWN_EGG)
                .add(Items.HOGLIN_SPAWN_EGG)
                .add(Items.HUSK_SPAWN_EGG)
                .add(Items.MAGMA_CUBE_SPAWN_EGG)
                .add(Items.PHANTOM_SPAWN_EGG)
                .add(Items.PIGLIN_SPAWN_EGG)
                .add(Items.PIGLIN_BRUTE_SPAWN_EGG)
                .add(Items.PILLAGER_SPAWN_EGG)
                .add(Items.RAVAGER_SPAWN_EGG)
                .add(Items.SHULKER_SPAWN_EGG)
                .add(Items.SILVERFISH_SPAWN_EGG)
                .add(Items.SKELETON_SPAWN_EGG)
                .add(Items.SLIME_SPAWN_EGG)
                .add(Items.STRAY_SPAWN_EGG)
                .add(Items.SPIDER_SPAWN_EGG)
                .add(Items.VEX_SPAWN_EGG)
                .add(Items.VINDICATOR_SPAWN_EGG)
                .add(Items.WARDEN_SPAWN_EGG)
                .add(Items.WITCH_SPAWN_EGG)
                .add(Items.WITHER_SKELETON_SPAWN_EGG)
                .add(Items.ZOGLIN_SPAWN_EGG)
                .add(Items.ZOMBIE_SPAWN_EGG)
                .add(Items.ZOMBIFIED_PIGLIN_SPAWN_EGG)
                .add(Items.ZOMBIE_VILLAGER_SPAWN_EGG)
                .add(Items.WITHER_SPAWN_EGG)
                .add(Items.ENDER_DRAGON_SPAWN_EGG)
                .add(TCItems.GIANT_SPAWN_EGG.get())
                .add(TCItems.ILLUSIONER_SPAWN_EGG.get())
                .addOptional(AetherItems.AECHOR_PLANT_SPAWN_EGG.getId())
                .addOptional(AetherItems.BLUE_SWET_SPAWN_EGG.getId())
                .addOptional(AetherItems.COCKATRICE_SPAWN_EGG.getId())
                .addOptional(AetherItems.EVIL_WHIRLWIND_SPAWN_EGG.getId())
                .addOptional(AetherItems.FIRE_MINION_SPAWN_EGG.getId())
                .addOptional(AetherItems.GOLDEN_SWET_SPAWN_EGG.getId())
                .addOptional(AetherItems.MIMIC_SPAWN_EGG.getId())
                .addOptional(AetherItems.SENTRY_SPAWN_EGG.getId())
                .addOptional(AetherItems.VALKYRIE_SPAWN_EGG.getId())
                .addOptional(AetherItems.VALKYRIE_QUEEN_SPAWN_EGG.getId())
                .addOptional(AetherItems.SLIDER_SPAWN_EGG.getId())
                .addOptional(AetherItems.SUN_SPIRIT_SPAWN_EGG.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:iceologer_spawn_egg")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:wildfire_spawn_egg")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:illusioner_spawn_egg")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:terracube_spawn_egg")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:skyslime_spawn_egg")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ender_slime_spawn_egg")));
    }

    private void addTradingTags() {
        tag(TCItemTags.END_SAPLINGS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:pream_sapling")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:putac_shroom")));
        tag(TCItemTags.END_LOGS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:pream_log")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:ebony_wood")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("unusualend:chorus_nest_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("unusualend:stripped_chorus_nest_planks")));
        tag(TCItemTags.SLEDS)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:sleds")));
        tag(TCItemTags.PET_SUPPLIES)
                .add(Items.LEAD)
                .add(Items.WARPED_FUNGUS_ON_A_STICK)
                .add(Items.CARROT_ON_A_STICK)
                .add(Items.SADDLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:feather_on_a_stick")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:collar_tag")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:deed_of_ownership")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:wayward_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:drum")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:flute")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("leashed:diamond_lead")));
        tag(TCItemTags.PET_BEDS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_yellow")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_white")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_red")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_purple")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_pink")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_orange")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_magenta")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_lime")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_light_gray")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_light_blue")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_green")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_gray")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_cyan")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_brown")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_blue")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:pet_bed_black")));
        tag(TCItemTags.PACKAGE_CONTAINERS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wares:cardboard_box")));
        tag(TCItemTags.SAND)
                .add(Items.SAND)
                .add(Items.RED_SAND)
                .addOptional(BOPBlocks.WHITE_SAND.getLootTable())
                .addOptional(BOPBlocks.ORANGE_SAND.getLootTable())
                .addOptional(BOPBlocks.BLACK_SAND.getLootTable())
                .addOptional(BOPBlocks.MOSSY_BLACK_SAND.getLootTable());
        tag(TCItemTags.CANDELABRA)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_yellow")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_white")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_red")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_purple")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_pink")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_orange")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_magenta")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_lime")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_green")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_gray")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_cyan")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_brown")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_blue")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_black")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_light_gray")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra_light_blue")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:lamp_candleabra")));
        tag(TCItemTags.PLANTERS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:hanging_pot")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:planter")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:flower_box")));
        tag(TCItemTags.TRELLIS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:oak_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:spruce_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:birch_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:jungle_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:acacia_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:dark_oak_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:crimson_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:warped_trellis")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:mangrove_trellis")));
        tag(TCItemTags.PICTURE_FRAMES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:oak_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:spruce_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:birch_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:jungle_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:acacia_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:dark_oak_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:crimson_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:warped_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:mangrove_picture_frame")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:quartz_picture_frame")));
        tag(TCItemTags.BLINDS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:oak_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:spruce_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:birch_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:jungle_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:acacia_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:dark_oak_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:crimson_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:warped_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:mangrove_blinds")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:iron_blinds")));
        tag(TCItemTags.GLAZED_TERRACOTTA)
                .add(Items.GRAY_GLAZED_TERRACOTTA)
                .add(Items.GREEN_GLAZED_TERRACOTTA)
                .add(Items.BLACK_GLAZED_TERRACOTTA)
                .add(Items.BLUE_GLAZED_TERRACOTTA)
                .add(Items.BROWN_GLAZED_TERRACOTTA)
                .add(Items.CYAN_GLAZED_TERRACOTTA)
                .add(Items.LIGHT_BLUE_GLAZED_TERRACOTTA)
                .add(Items.LIGHT_GRAY_GLAZED_TERRACOTTA)
                .add(Items.LIME_GLAZED_TERRACOTTA)
                .add(Items.MAGENTA_GLAZED_TERRACOTTA)
                .add(Items.ORANGE_GLAZED_TERRACOTTA)
                .add(Items.PINK_GLAZED_TERRACOTTA)
                .add(Items.PURPLE_GLAZED_TERRACOTTA)
                .add(Items.RED_GLAZED_TERRACOTTA)
                .add(Items.WHITE_GLAZED_TERRACOTTA)
                .add(Items.YELLOW_GLAZED_TERRACOTTA);
        tag(TCItemTags.INK)
                .add(Items.INK_SAC)
                .add(Items.GLOW_INK_SAC)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:antique_ink")));
        tag(TCItemTags.LANTERNS)
                .add(Items.SOUL_LANTERN)
                .add(Items.LANTERN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:scorched_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:striped_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:covered_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:chain_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:tavern_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:cross_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:bell_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:copper_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:crimson_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:brass_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:silver_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:lead_lantern")));
        tag(TCItemTags.CRAB_TRAP)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:crab_trap")));
        tag(TCItemTags.TOTEMS)
                .add(Items.TOTEM_OF_UNDYING)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:totem_of_freezing")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:totem_of_illusion")));
        tag(TCItemTags.GUIDE_BOOKS)
                .addOptionalTag(TinkerTags.Items.GUIDEBOOKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("turtleblockacademy:brewingguide")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("patchouli:guide_book")));
        tag(TCItemTags.DECORATIVE_BOOKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:bookstack")));
        tag(TCItemTags.SLIMEBALLS)
                .add(Items.SLIME_BALL)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:sky_slime_ball")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ichor_slime_ball")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ender_slime_ball")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("aether:swet_ball")));
    }

    private void addToolTags() {
        tag(TCItemTags.TOOLS_CARVING)
                .addTag(ItemTags.PICKAXES)
                .addTag(TCItemTags.TOOLS_KNIVES)
                .addTag(TCItemTags.TOOLS_CHISELS);
        tag(TCItemTags.GLASSBLOWER_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todevillagers:marver")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todevillagers:glassblowing_pipe")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todevillagers:glassblower_shears")));
        tag(TCItemTags.WOOD_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wood_sewing_needle")));
        tag(TCItemTags.STONE_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:stone_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:bone_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("turtleblockacademy:copper_sewing_needle")));
        tag(TCItemTags.IRON_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:file")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:iron_sewing_needle")));
        tag(TCItemTags.GOLD_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:gold_sewing_needle")));
        tag(TCItemTags.DIAMOND_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:diamond_sewing_needle")));
        tag(TCItemTags.NETHERITE_TIER_SEWING_TOOLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:netherite_sewing_needle")));
        tag(TCItemTags.TOOLS_SEWING)
                .addTag(TCItemTags.WOOD_TIER_SEWING_TOOLS)
                .addTag(TCItemTags.STONE_TIER_SEWING_TOOLS)
                .addTag(TCItemTags.IRON_TIER_SEWING_TOOLS)
                .addTag(TCItemTags.GOLD_TIER_SEWING_TOOLS)
                .addTag(TCItemTags.DIAMOND_TIER_SEWING_TOOLS)
                .addTag(TCItemTags.NETHERITE_TIER_SEWING_TOOLS);
        tag(TCItemTags.BEYOND_TIER_KNIVES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:onyx_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:thyrium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:valkyrum_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:allthemodium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:sinisite_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:refined_obsidian_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:netherite_opal_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:black_opal_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:obsidian_infused_enderite_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:enderite_knife")));
        tag(TCItemTags.NETHERITE_TIER_KNIVES)
                .addOptional(ModItems.NETHERITE_KNIFE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:netherite_machete")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("endsdelight:dragon_tooth_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:gilded_netherite_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:adamantite_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:warden_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:draco_arcanus_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:fiery_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:large_amethyst_knife")));
        tag(TCItemTags.DIAMOND_TIER_KNIVES)
                .addOptional(ModItems.DIAMOND_KNIFE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:diamond_machete")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("endsdelight:dragon_egg_shell_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:gilded_quartz_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:phoenix_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:gravitite_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:utherium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:necronium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:soul_steal_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:pearlescent_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:knightmetal_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:steel_leaf_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:osmium_knife")));
        tag(TCItemTags.GOLD_TIER_KNIVES)
                .addOptional(ModItems.GOLDEN_KNIFE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:golden_machete")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:adamantium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:blazing_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:rose_gold_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:infused_veridium_knife")));
        tag(TCItemTags.IRON_TIER_KNIVES)
                .addOptional(ModItems.IRON_KNIFE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:iron_machete")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:veridium_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:froststeel_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cloggrum_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:crystalline_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:kiwano_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:experience_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:zinc_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:ironwood_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:nickel_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:invar_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:electrum_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:constantan_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:refined_glowstone_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:bronze_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:aluminum_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:brass_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:silver_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:steel_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:copper_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:amethyst_knife")));
        tag(TCItemTags.STONE_TIER_KNIVES)
                .addOptional(ModItems.FLINT_KNIFE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("endsdelight:purpur_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("endsdelight:endstone_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:holystone_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:lead_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:lapis_lazuli_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:tin_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:bone_knife")));
        tag(TCItemTags.WOOD_TIER_KNIVES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:leaf_knife")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:skyroot_knife")));
        tag(TCItemTags.TOOLS_CHISELS);
        tag(TCItemTags.TOOLS_KNIVES)
                .addTag(TCItemTags.BEYOND_TIER_KNIVES)
                .addTag(TCItemTags.NETHERITE_TIER_KNIVES)
                .addTag(TCItemTags.DIAMOND_TIER_KNIVES)
                .addTag(TCItemTags.GOLD_TIER_KNIVES)
                .addTag(TCItemTags.IRON_TIER_KNIVES)
                .addTag(TCItemTags.STONE_TIER_KNIVES)
                .addTag(TCItemTags.WOOD_TIER_KNIVES);
    }

    private void addCurioTags() {
        tag(TCItemTags.BUNDLES)
                .add(Items.BUNDLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:leather_bag_of_holding")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:iron_bag_of_holding")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:golden_bag_of_holding")));
        tag(TCItemTags.WALLETS)
                .add(TCItems.WALLET.get())
                .addTag(TCItemTags.BUNDLES);
        tag(TCItemTags.FRIENDSHIP_BRACELETS)
                .add(TCItems.BRACELET_FRIENDSHIP_ECHO.get())
                .add(TCItems.BRACELET_FRIENDSHIP_EMERALD.get())
                .add(TCItems.BRACELET_FRIENDSHIP_ENDONIAN.get())
                .add(TCItems.BRACELET_FRIENDSHIP_LUCKY.get());
    }

    private void addEquipmentTags() {
        tag(TCItemTags.DYEABLE_ARMOR)
                .add(Items.LEATHER_HORSE_ARMOR)
                .add(Items.LEATHER_BOOTS)
                .add(Items.LEATHER_LEGGINGS)
                .add(Items.LEATHER_CHESTPLATE)
                .add(Items.LEATHER_HELMET)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wool_shoes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wool_pants")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wool_shirt")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wool_hat")));
        tag(TCItemTags.ENCHANTABLE_PET_GEAR)
                .add(Items.DIAMOND_HORSE_ARMOR)
                .add(Items.GOLDEN_HORSE_ARMOR)
                .add(Items.IRON_HORSE_ARMOR)
                .add(Items.LEATHER_HORSE_ARMOR)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:collar_tag")));
    }

    private void addCraftingTags() {
        tag(TCItemTags.TIP_JAR_ITEMS)
                .addTag(TCItemTags.CURRENCY_SINGLES)
                .addTag(TCItemTags.COLLECTIBLE_COINS_TAG)
                .addTag(TCItemTags.COOKIES)
                .addTag(TCItemTags.CANDY)
                .addTag(Tags.Items.SEEDS)
                .addTag(TCItemTags.BOWLS)
                .addTag(TCItemTags.CUPS)
                .addTag(TCItemTags.BREAD)
                .addTag(TCItemTags.COOKIE_CUTTERS)
                .addOptionalTag(ResourceLocation.parse("forge:tea_leaves"))
                .addOptionalTag(ResourceLocation.parse("forge:nuts"));
        tag(TCItemTags.CANDY)
                .add(TCItems.CHOCOLATE_COIN_WARPED_SPICE.get())
                .add(TCItems.CHOCOLATE_COIN_VELVETY_CLOVER.get())
                .add(TCItems.CHOCOLATE_COIN_ULTIMATE_DARK.get())
                .add(TCItems.CHOCOLATE_COIN_MILK_BONE.get())
                .add(TCItems.CHOCOLATE_COIN_FUEGO_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_FESTIVE_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_CRIMSON_SPORE.get())
                .add(TCItems.CHOCOLATE_COIN_CARMEL_CRISP.get())
                .add(TCItems.CHOCOLATE_COIN_BUBBLY_BERRY.get())
                .addOptional(FestiveDelightModItems.SUGAR_CANE.getId())
                .addOptional(ResourceLocation.parse("supplementaries:candy"))
                .addOptional(ResourceLocation.parse("aether:candy_cane"))
                .addOptionalTag(ResourceLocation.parse("forge:marshmallow"))
                .addOptionalTag(ResourceLocation.parse("forge:chocolate"))
                .addOptionalTag(TCItemTags.CHOCOLATE_BARS)
                .addOptionalTag(TCItemTags.SWEETS);
        tag(TCItemTags.SWEETS)
                .add(TCItems.CHOCOLATE_COIN_WARPED_SPICE.get())
                .add(TCItems.CHOCOLATE_COIN_VELVETY_CLOVER.get())
                .add(TCItems.CHOCOLATE_COIN_ULTIMATE_DARK.get())
                .add(TCItems.CHOCOLATE_COIN_MILK_BONE.get())
                .add(TCItems.CHOCOLATE_COIN_FUEGO_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_FESTIVE_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_CRIMSON_SPORE.get())
                .add(TCItems.CHOCOLATE_COIN_CARMEL_CRISP.get())
                .add(TCItems.CHOCOLATE_COIN_BUBBLY_BERRY.get());
        tag(TCItemTags.CHOCOLATE_BARS)
                .add(TCItems.CHOCOLATE_COIN_WARPED_SPICE.get())
                .add(TCItems.CHOCOLATE_COIN_VELVETY_CLOVER.get())
                .add(TCItems.CHOCOLATE_COIN_ULTIMATE_DARK.get())
                .add(TCItems.CHOCOLATE_COIN_MILK_BONE.get())
                .add(TCItems.CHOCOLATE_COIN_FUEGO_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_FESTIVE_FUDGE.get())
                .add(TCItems.CHOCOLATE_COIN_CRIMSON_SPORE.get())
                .add(TCItems.CHOCOLATE_COIN_CARMEL_CRISP.get())
                .add(TCItems.CHOCOLATE_COIN_BUBBLY_BERRY.get());
        tag(TCItemTags.CURRENCY_SINGLES)
                .add(TCItems.ECHO_FLORIN.get())
                .add(TCItems.EMERALD_FLORIN.get())
                .add(TCItems.DIAMOND_FLORIN.get())
                .add(TCItems.AMETHYST_FLORIN.get())
                .add(TCItems.LAPIS_FLORIN.get())
                .add(TCItems.ENDONIAN_COIN.get())
                .add(TCItems.LUCKY_COIN.get())
                .add(TCItems.EMERALD_BANK_NOTE.get())
                .add(TCItems.EMERALD_HALF_BANK_NOTE.get())
                .add(TCItems.EMERALD_QUARTER_BANK_NOTE.get())
                .add(TCItems.NETHER_GOLD_COIN.get())
                .add(TCItems.NETHERITE_COIN.get())
                .add(TCItems.GOLD_COIN.get())
                .add(TCItems.IRON_COIN.get())
                .add(TCItems.COPPER_COIN.get())
                .addOptional(ItemRegistry.COINS.get("Copper").getId())
                .addOptional(ItemRegistry.COINS.get("Brass").getId())
                .addOptional(ItemRegistry.COINS.get("Zinc").getId())
                .addOptional(ItemRegistry.COINS.get("Iron").getId())
                .addOptional(ItemRegistry.COINS.get("Gold").getId())
                .addOptional(ItemRegistry.COINS.get("Industrial Iron").getId())
                .addOptional(ItemRegistry.COINS.get("Netherite").getId());
        tag(TCItemTags.CURRENCY)
                .add(TCBlocks.ECHO_COIN_BAG.get().asItem())
                .add(TCItems.ECHO_FLORIN.get())
                .add(TCBlocks.EMERALD_FLORIN_BAG.get().asItem())
                .add(TCItems.EMERALD_FLORIN.get())
                .add(TCBlocks.DIAMOND_FLORIN_BAG.get().asItem())
                .add(TCItems.DIAMOND_FLORIN.get())
                .add(TCBlocks.AMETHYST_FLORIN_BAG.get().asItem())
                .add(TCItems.AMETHYST_FLORIN.get())
                .add(TCBlocks.LAPIS_FLORIN_BAG.get().asItem())
                .add(TCItems.LAPIS_FLORIN.get())
                .add(TCBlocks.ENDONIAN_COIN_BAG.get().asItem())
                .add(TCItems.ENDONIAN_COIN.get())
                .add(TCBlocks.LUCKY_COIN_BAG.get().asItem())
                .add(TCItems.LUCKY_COIN.get())
                .add(TCBlocks.EMERALD_BANK_NOTE_BAG.get().asItem())
                .add(TCItems.EMERALD_BANK_NOTE.get())
                .add(TCBlocks.EMERALD_HALF_BANK_NOTE_BAG.get().asItem())
                .add(TCItems.EMERALD_HALF_BANK_NOTE.get())
                .add(TCBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get().asItem())
                .add(TCItems.EMERALD_QUARTER_BANK_NOTE.get())
                .add(TCBlocks.NETHER_GOLD_COIN_BAG.get().asItem())
                .add(TCItems.NETHER_GOLD_COIN.get())
                .add(TCBlocks.NETHERITE_COIN_BAG.get().asItem())
                .add(TCItems.NETHERITE_COIN.get())
                .add(TCBlocks.GOLD_COIN_BAG.get().asItem())
                .add(TCItems.GOLD_COIN.get())
                .add(TCBlocks.IRON_COIN_BAG.get().asItem())
                .add(TCItems.IRON_COIN.get())
                .add(TCBlocks.COPPER_COIN_BAG.get().asItem())
                .add(TCItems.COPPER_COIN.get())
                .addOptional(ItemRegistry.COINS.get("Copper").getId())
                .addOptional(ItemRegistry.COINS.get("Brass").getId())
                .addOptional(ItemRegistry.COINS.get("Zinc").getId())
                .addOptional(ItemRegistry.COINS.get("Iron").getId())
                .addOptional(ItemRegistry.COINS.get("Gold").getId())
                .addOptional(ItemRegistry.COINS.get("Industrial Iron").getId())
                .addOptional(ItemRegistry.COINS.get("Netherite").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Copper").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Brass").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Zinc").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Iron").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Gold").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Industrial Iron").getId())
                .addOptional(ItemRegistry.COINSTACKS.get("Netherite").getId());
        tag(TCItemTags.TRIMS)
                .add(Items.HOST_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.RAISER_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.RIB_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.TIDE_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.VEX_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.EYE_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.WARD_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.WILD_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.COAST_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.DUNE_ARMOR_TRIM_SMITHING_TEMPLATE)
                .add(Items.SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE);
        tag(TCItemTags.SEWING_PATTERNS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:common_pattern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:uncommon_pattern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:rare_pattern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:legendary_pattern")));
        tag(TCItemTags.REFRESH_BOOK)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("villager_enchanter:enchant_refresh_book")));
        tag(TCItemTags.BOWLS)
                .add(Items.BOWL)
                .addOptional(ResourceLocation.parse("ecologics:coconut_husk"));
        tag(TCItemTags.CUPS)
                .add(Items.GLASS_BOTTLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("drinkbeer:beer_mug")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:mug")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:glass_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:milkshake_cup")));
        tag(TCItemTags.RECYCLABLE_GLASS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todevillagers:crushed_glass")));
        tag(TCItemTags.SALT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:dried_salt")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("turtleblockacademy:pickling_salt")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("salt:salt")));
        tag(TCItemTags.CLOVER)
                .add(TCItems.FOUR_LEAF_CLOVER.get());
        tag(TCItemTags.ROPES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:rope_arrow")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:rope")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("beautify:rope")))
                .addOptional(ModItems.ROPE.getId());
        tag(TCItemTags.STICKS)
                .add(Items.STICK)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("aether:skyroot_stick")));
        tag(TCItemTags.ASH)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:ash")));
        tag(TCItemTags.SOUL_BINDER)
                .add(Items.TOTEM_OF_UNDYING)
                .add(Items.ECHO_SHARD)
                .addOptional(AetherItems.LIFE_SHARD.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("alexsmobs:soul_heart")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:binding_gemstone")));
        tag(TCItemTags.DYES)
                .add(Items.GRAY_DYE)
                .add(Items.GREEN_DYE)
                .add(Items.BLACK_DYE)
                .add(Items.BLUE_DYE)
                .add(Items.BROWN_DYE)
                .add(Items.CYAN_DYE)
                .add(Items.LIGHT_BLUE_DYE)
                .add(Items.LIGHT_GRAY_DYE)
                .add(Items.LIME_DYE)
                .add(Items.MAGENTA_DYE)
                .add(Items.ORANGE_DYE)
                .add(Items.PINK_DYE)
                .add(Items.PURPLE_DYE)
                .add(Items.RED_DYE)
                .add(Items.WHITE_DYE)
                .add(Items.YELLOW_DYE);
        tag(TCItemTags.LEATHER_TEXTILES)
                .addTag(TCItemTags.LEATHER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:leather_strip")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:leather_sheet")));
        tag(TCItemTags.LEATHER)
                .add(Items.RABBIT_HIDE)
                .add(Items.LEATHER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:hoglin_hide")));
        tag(TCItemTags.TEXTILES)
                .addTag(TCItemTags.CURRENCY_FIBER)
                .addTag(TCItemTags.CURRENCY_PAPER)
                .addTag(TCItemTags.FABRIC)
                .addTag(TCItemTags.FIBRE)
                .addTag(TCItemTags.THREAD);
        tag(TCItemTags.CURRENCY_FIBER)
                .add(Items.PAPER)
                .add(Items.STRING)
                .addTag(TCItemTags.FIBRE)
                .addTag(TCItemTags.BARK)
                .addTag(TCItemTags.STRING)
                .addTag(TCItemTags.PAPER);
        tag(TCItemTags.CURRENCY_PAPER)
                .add(TCItems.EMERALD_COARSE_WOVE_PAPER.get())
                .add(TCItems.EMERALD_WOVE_PAPER.get())
                .add(TCItems.EMERALD_SMOOTH_WOVE_PAPER.get());
        tag(TCItemTags.FABRIC)
                .add(TCItems.LUCKY_FABRIC.get());
        tag(TCItemTags.FIBRE)
                .add(TCItems.EMERALD_FIBER.get())
                .add(TCItems.LUCKY_FIBER.get())
                .add(TCItems.ENDONIAN_FIBER.get())
                .add(TCItems.ECHO_FIBER.get());
        tag(TCItemTags.THREAD)
                .add(TCItems.EMERALD_THREAD.get())
                .add(TCItems.LUCKY_THREAD.get())
                .add(TCItems.ENDONIAN_THREAD.get())
                .add(TCItems.ECHO_THREAD.get());
        tag(TCItemTags.BARK)
                .addOptional(ModItems.TREE_BARK.getId());
        tag(TCItemTags.STRING)
                .add(Items.STRING);
        tag(TCItemTags.PAPER)
                .add(Items.PAPER);
        tag(TCItemTags.NUGGETS)
                .addTag(TCItemTags.COPPER_NUGGET)
                .addTag(TCItemTags.IRON_NUGGET)
                .addTag(TCItemTags.GOLD_NUGGET)
                .addTag(TCItemTags.LUCKY_NUGGET)
                .addTag(TCItemTags.NETHERITE_NUGGET)
                .addTag(TCItemTags.ENDONIAN_NUGGET);
        tag(TCItemTags.COPPER_NUGGET)
                .add(TCItems.COPPER_NUGGET.get());
        tag(TCItemTags.IRON_NUGGET)
                .add(Items.IRON_NUGGET);
        tag(TCItemTags.GOLD_NUGGET)
                .add(Items.GOLD_NUGGET);
        tag(TCItemTags.LUCKY_NUGGET)
                .add(TCItems.LUCKY_NUGGET.get());
        tag(TCItemTags.NETHERITE_NUGGET)
                .add(TCItems.NETHERITE_NUGGET.get());
        tag(TCItemTags.ENDONIAN_NUGGET)
                .add(TCItems.ENDONIAN_NUGGET.get());
        tag(TCItemTags.COPPER_INGOT)
                .add(Items.COPPER_INGOT);
        tag(TCItemTags.IRON_INGOT)
                .add(Items.IRON_INGOT);
        tag(TCItemTags.GOLD_INGOT)
                .add(Items.GOLD_INGOT);
        tag(TCItemTags.NETHERITE_INGOT)
                .add(Items.NETHERITE_INGOT);
        tag(TCItemTags.ENDONIAN_INGOT)
                .add(TCItems.ENDONIAN_INGOT.get());
        tag(TCItemTags.INGOTS)
                .addTag(TCItemTags.COPPER_INGOT)
                .addTag(TCItemTags.IRON_INGOT)
                .addTag(TCItemTags.GOLD_INGOT)
                .addTag(TCItemTags.NETHERITE_INGOT)
                .addTag(TCItemTags.ENDONIAN_INGOT);
        tag(TCItemTags.CURRENCY_MATERIALS)
                .addTag(TCItemTags.NUGGETS)
                .addTag(TCItemTags.INGOTS)
                .addTag(TCItemTags.CURRENCY_PAPER);
        tag(TCItemTags.CURRENCY_STAMPS)
                .add(TCItems.CURRENCY_STAMP.get())
                .add(TCItems.NETHER_CURRENCY_STAMP.get())
                .add(TCItems.ENDONIAN_CURRENCY_STAMP.get())
                .add(TCItems.GEM_CURRENCY_STAMP.get());
        tag(TCItemTags.ONE_EMERALD_CURRENCY_GEMS)
                .add(TCItems.ENDONIAN_CRYSTAL.get())
                .add(Items.DIAMOND)
                .add(Items.LAPIS_LAZULI)
                .add(Items.EMERALD);
    }

    private void addBarterTags() {
        tag(TCItemTags.PIGLIN_LOVED)
                .addTag(TCItemTags.PIGLIN_BARTER_ITEMS);
        tag(TCItemTags.PIGLIN_WANTED_ITEMS)
                .addTag(TCItemTags.PIGLIN_LOVED)
                .addTag(TCItemTags.PIGLIN_MERCHANT_FOOD)
                .addTag(TCItemTags.PIGLIN_BARTER_ITEMS);
        tag(TCItemTags.PIGLIN_BARTER_ITEMS)
                .add(TCItems.NETHER_GOLD_COIN.get());
        tag(TCItemTags.PIGLIN_MERCHANT_RARE_GOODS)
                .add(Items.MUSIC_DISC_PIGSTEP)
                .add(Items.NETHERITE_SCRAP)
                .add(Items.ANCIENT_DEBRIS.asItem());
        tag(TCItemTags.PIGLIN_MERCHANT_UNCOMMON_GOODS)
                .add(Items.FIRE_CHARGE)
                .add(Items.MAGMA_CREAM)
                .add(Items.ENDER_PEARL);
        tag(TCItemTags.PIGLIN_MERCHANT_COMMON_GOODS)
                .add(Items.IRON_INGOT)
                .add(Items.GLOWSTONE_DUST)
                .add(Items.QUARTZ)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:rose_quartz")));
        tag(TCItemTags.PIGLIN_MERCHANT_CHEAP_GOODS)
                .addTag(TCItemTags.FUNGUS)
                .add(Items.NETHER_BRICK)
                .add(Items.LEATHER)
                .add(Items.WARPED_ROOTS)
                .add(Items.TWISTING_VINES)
                .add(Items.CRIMSON_ROOTS)
                .add(Items.WEEPING_VINES)
                .add(Items.STRING);
        tag(TCItemTags.FUNGUS)
                .add(Block.byItem(SHROOMLIGHT).asItem())
                .add(Items.WARPED_FUNGUS)
                .add(Items.CRIMSON_FUNGUS)
                .add(Items.BROWN_MUSHROOM)
                .add(Items.RED_MUSHROOM)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:glowshroom")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:toadstool")));
    }

    private void addFoodTags() {
        tag(TCItemTags.PET_FOOD)
                .add(Items.TROPICAL_FISH)
                .add(Items.BONE)
                .add(Items.CARROT)
                .add(Items.GOLDEN_CARROT)
                .add(Items.HAY_BLOCK)
                .add(Items.SPIDER_EYE)
                .addTag(ItemTags.FOX_FOOD)
                .addTag(TCItemTags.RAW_MEATS)
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("domesticationinnovation:rotten_apple")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("farmersdelight:dog_food")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("farmersdelight:horse_feed")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("supplementaries:sugar_cube")));
        tag(TCItemTags.DESSERTS)
                .addTag(TCItemTags.COOKIES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:milk_chocolate_bar")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:dark_chocolate_bar")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:white_chocolate_bar")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:glow_berry_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:mocha_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:coffee_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:napolitano_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cream_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:chocolate_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:sweet_berry_milkshake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:glow_berry_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:mocha_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:coffee_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:chocolate_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cream_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:napolitano_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:sweet_berry_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:piece_of_honey_cheesecake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:piece_of_chocolate_cheesecake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:piece_of_cheesecake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:piece_of_cake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:brigadeiro")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:beijinho")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:chocolate_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:sweet_berry_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:honey_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:golden_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:fruit_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:sweet_berry_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:chocolate_ice_cream")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:ice_cream")))
                .addOptional(ModItems.CAKE_SLICE.getId())
                .addOptional(ModItems.APPLE_PIE_SLICE.getId())
                .addOptional(ModItems.SWEET_BERRY_CHEESECAKE_SLICE.getId())
                .addOptional(ModItems.CHOCOLATE_PIE_SLICE.getId())
                .addOptional(ModItems.MELON_POPSICLE.getId())
                .addOptional(ModItems.GLOW_BERRY_CUSTARD.getId());
        tag(TCItemTags.PLATED_FOODS)
                .addOptional(ModItems.SHEPHERDS_PIE.getId())
                .addOptional(ModItems.HONEY_GLAZED_HAM.getId())
                .addOptional(ModItems.STUFFED_PUMPKIN.getId())
                .addOptional(ModItems.ROAST_CHICKEN.getId())
                .addOptional(ModItems.GRILLED_SALMON.getId())
                .addOptional(ModItems.SQUID_INK_PASTA.getId())
                .addOptional(ModItems.RATATOUILLE.getId())
                .addOptional(ModItems.STEAK_AND_POTATOES.getId())
                .addOptional(ModItems.VEGETABLE_NOODLES.getId())
                .addOptional(ModItems.MUSHROOM_RICE.getId())
                .addOptional(ModItems.PASTA_WITH_MUTTON_CHOP.getId())
                .addOptional(ModItems.DUMPLINGS.getId())
                .addOptional(ModItems.CABBAGE_ROLLS.getId())
                .addOptional(ModItems.COOKED_RICE.getId())
                .addOptional(ModItems.FRIED_RICE.getId())
                .addOptional(ModItems.BACON_AND_EGGS.getId())
                .addOptional(ModItems.PASTA_WITH_MEATBALLS.getId());
        tag(TCItemTags.SIDE_DISHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:apple_sauce")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:chicken_nuggets")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:fried_onions")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:carrot_fries")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:french_fries")))
                .addOptional(ModItems.SALMON_ROLL.getId())
                .addOptional(ModItems.COD_ROLL.getId())
                .addOptional(ModItems.KELP_ROLL.getId())
                .addOptional(ModItems.STUFFED_POTATO.getId())
                .addOptional(ModItems.COOKED_BACON.getId())
                .addOptional(ModItems.FRIED_EGG.getId())
                .addOptional(ModItems.FRUIT_SALAD.getId())
                .addOptional(ModItems.MIXED_SALAD.getId())
                .addOptional(ModItems.NETHER_SALAD.getId())
                .addOptional(ModItems.BARBECUE_STICK.getId());
        tag(TCItemTags.SANDWICHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:chicken_wrap")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:cheese_wrap")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:rabbit_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:croque_monsieur")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:chicken_cheese_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:cheeseburger")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:cod_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:salmon_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:pork_sandwich")))
                .addOptional(ModItems.MUTTON_WRAP.getId())
                .addOptional(ModItems.HAMBURGER.getId())
                .addOptional(ModItems.EGG_SANDWICH.getId())
                .addOptional(ModItems.CHICKEN_SANDWICH.getId())
                .addOptional(ModItems.BACON_SANDWICH.getId());
        tag(TCItemTags.FAT)
                .add(Items.HONEYCOMB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:animal_oil_bottle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:animal_fat")));
        tag(TCItemTags.COOKIE_CUTTERS)
                .addOptional(FestiveDelightModItems.SWORD_CUTTER.getId())
                .addOptional(FestiveDelightModItems.GINGERBREAD_MAN_CUTTER.getId())
                .addOptional(FestiveDelightModItems.FLAKE_CUTTER.getId())
                .addOptional(FestiveDelightModItems.CREEPER_CUTTER.getId());
        tag(TCItemTags.COOKIES)
                .add(Items.COOKIE)
                .addOptional(FestiveDelightModItems.GINGERBREAD_COOKIE_FLAKE.getId())
                .addOptional(FestiveDelightModItems.GINGERBREAD_COOKIE_SWORD.getId())
                .addOptional(FestiveDelightModItems.GINGERBREAD_MAN_CREEPER.getId())
                .addOptional(FestiveDelightModItems.GINGERBREAD_MAN.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("aether:gingerbread_man")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:cookies")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:chocolate_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:sweet_berry_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:honey_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:golden_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:sweet_berry_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:honey_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:green_tea_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_man")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_star")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_creeper")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_block")));
        tag(TCItemTags.BERRIES)
                .add(Items.SWEET_BERRIES)
                .add(Items.GLOW_BERRIES)
                .addTag(ItemTags.FOX_FOOD)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:salmonberries")));
        tag(TCItemTags.CROPS_APPLES)
                .add(Items.APPLE);
        tag(TCItemTags.CROPS_FRUIT)
                .addTag(TCItemTags.BERRIES)
                .addTag(TCItemTags.CROPS_APPLES);
        tag(TCItemTags.PIES)
                .add(Items.PUMPKIN_PIE)
                .addOptional(ModItems.CHOCOLATE_PIE.getId())
                .addOptional(ModItems.APPLE_PIE.getId());
        tag(TCItemTags.GOURDS)
                .add(Items.PUMPKIN)
                .add(Items.MELON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cantaloupe")));
        tag(TCItemTags.KAWAII_COFFEE_INGREDIENTS)
                .add(Items.SUGAR)
                .add(Items.COCOA_BEANS)
                .add(Items.HONEY_BOTTLE)
                .addTag(TCItemTags.MILK)
                .addTag(TCItemTags.BERRIES)
                .addOptionalTag(TCItemTags.COCOA_INGREDIENTS)
                .addOptionalTag(TCItemTags.COFFEE_INGREDIENTS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cream_cheese")));
        tag(TCItemTags.BREAD)
                .add(Items.BREAD)
                .addOptional(FestiveDelightModItems.SUS_BREAD.getId())
                .addOptional(ResourceLocation.parse("delightful:cantaloupe_bread"))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread_cocoa")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:apricotjerry_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("hauntedharvest:cornbread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:nether_wart_sourdough")));
        tag(TCItemTags.COOKED_FISHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:stuffed_nautilus_shell")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:fish_stick")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:surf_and_turf")))
                .addTag(TCItemTags.COOKED_ELDER_GUARDIAN)
                .addTag(TCItemTags.COOKED_GUARDIAN)
                .addTag(TCItemTags.COOKED_CLAWSTER)
                .addTag(TCItemTags.COOKED_SHRIMP)
                .addTag(TCItemTags.COOKED_CLAM)
                .addTag(TCItemTags.COOKED_CRAB)
                .addTag(TCItemTags.COOKED_SQUID)
                .addTag(TCItemTags.COOKED_GLOW_SQUID);
        tag(TCItemTags.COOKED_ELDER_GUARDIAN)
                .addTag(TCItemTags.COOKED_GUARDIAN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cabbage_wrapped_elder_guardian")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cooked_elder_guardian_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:elder_guardian_roll")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:bowl_of_guardian_soup")));
        tag(TCItemTags.COOKED_GUARDIAN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cooked_guardian_tail")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:bowl_of_guardian_soup")));
        tag(TCItemTags.COOKED_CLAWSTER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_clawster")));
        tag(TCItemTags.COOKED_SHRIMP)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:shrimp_skewer")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_shrimp")));
        tag(TCItemTags.COOKED_CLAM)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:clam_bake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_clam_meat")));
        tag(TCItemTags.COOKED_CRAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:crab_meat")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:crab_cakes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_crab")));
        tag(TCItemTags.COOKED_SQUID)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:squid_rings")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:baked_tentacle_on_a_stick")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:bowl_of_stuffed_squid")));
        tag(TCItemTags.COOKED_GLOW_SQUID)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:squid_rings")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:baked_tentacle_on_a_stick")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:bowl_of_stuffed_squid")));
        tag(TCItemTags.COOKED_TROPICAL_FISH)
                .add(Items.TROPICAL_FISH)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_tropical_fish")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:cooked_tropical_fish_slice")));
        tag(TCItemTags.COOKED_COD)
                .add(Items.COOKED_COD)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cooked_stuffed_cod")))
                .addOptional(ModItems.COOKED_COD_SLICE.getId());
        tag(TCItemTags.COOKED_SALMON)
                .add(Items.COOKED_SALMON)
                .addOptional(ModItems.COOKED_SALMON_SLICE.getId());
        tag(TCItemTags.RAW_FISHES)
                .addTag(TCItemTags.RAW_TROPICAL_FISH)
                .addTag(TCItemTags.RAW_PUFFERFISH)
                .addTag(TCItemTags.RAW_COD)
                .addTag(TCItemTags.RAW_SALMON)
                .addTag(TCItemTags.RAW_ELDER_GUARDIAN)
                .addTag(TCItemTags.RAW_GUARDIAN)
                .addTag(TCItemTags.RAW_CLAWSTER)
                .addTag(TCItemTags.RAW_SHRIMP)
                .addTag(TCItemTags.RAW_CLAM)
                .addTag(TCItemTags.RAW_CRAB)
                .addTag(TCItemTags.RAW_SQUID)
                .addTag(TCItemTags.RAW_GLOW_SQUID);
        tag(TCItemTags.RAW_PUFFERFISH)
                .add(Items.PUFFERFISH)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:fugu_slice")));
        tag(TCItemTags.RAW_TROPICAL_FISH)
                .add(Items.TROPICAL_FISH)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:tropical_fish_slice")));
        tag(TCItemTags.RAW_COD)
                .add(Items.COD)
                .addOptional(ModItems.COD_SLICE.getId());
        tag(TCItemTags.RAW_SALMON)
                .add(Items.SALMON)
                .addOptional(ModItems.SALMON_SLICE.getId());
        tag(TCItemTags.RAW_ELDER_GUARDIAN)
                .addTag(TCItemTags.RAW_GUARDIAN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:elder_guardian_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:elder_guardian_slab")));
        tag(TCItemTags.RAW_GUARDIAN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:guardian_tail")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:guardian")));
        tag(TCItemTags.RAW_CLAWSTER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:raw_clawster")));
        tag(TCItemTags.RAW_SHRIMP)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:raw_shrimp")));
        tag(TCItemTags.RAW_CLAM)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:raw_clam_meat")));
        tag(TCItemTags.RAW_CRAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:crab_claw")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:raw_crab")));
        tag(TCItemTags.RAW_SQUID)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cut_tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:squid")));
        tag(TCItemTags.RAW_GLOW_SQUID)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:cut_tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:tentacles")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:glow_squid")));
        tag(TCItemTags.DRINKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:iced_tea")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:creaming_soda")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:lemon_soda")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:orange_soda")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:cola_soda")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:expresso_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:american_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:latte_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:mocha_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:macchiato_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:doppio_coffee")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cappuccino_coffee")))
                .addOptional(ModItems.MELON_JUICE.getId())
                .addOptional(ModItems.APPLE_CIDER.getId())
                .addOptional(ModItems.MILK_BOTTLE.getId())
                .addOptional(ModItems.HOT_COCOA.getId());
        tag(TCItemTags.MILK)
                .add(Items.MILK_BUCKET)
                .addOptional(ModItems.MILK_BOTTLE.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:condensed_milk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("aether:skyroot_milk_bucket")));
        tag(TCItemTags.SWEETENER)
                .add(Items.SUGAR)
                .add(Items.HONEY_BOTTLE);
        tag(TCItemTags.COFFEE_INGREDIENTS)
                .addOptional(FRItems.COFFEE_BEANS.getId())
                .addOptional(FRItems.COFFEE_BERRIES.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:roasted_coffee_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:dried_coffee_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:coffee_fruit")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:coffee_powder")));
        tag(TCItemTags.COCOA_INGREDIENTS)
                .add(Items.COCOA_BEANS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:dried_cocoa_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:roasted_cocoa_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cocoa_powder")));
        tag(TCItemTags.INGREDIENTS)
                .addTag(Tags.Items.EGGS)
                .addTag(Tags.Items.CROPS)
                .addTag(TCItemTags.COCOA_INGREDIENTS)
                .addTag(TCItemTags.MILK)
                .addTag(TCItemTags.COOKED_FISHES)
                .addTag(TCItemTags.RAW_FISHES)
                .addTag(TCItemTags.COOKED_MEATS)
                .addTag(TCItemTags.RAW_MEATS)
                .addTag(TCItemTags.BREAD)
                .addOptional(ModItems.PIE_CRUST.getId())
                .addOptional(ModItems.TOMATO_SAUCE.getId())
                .addOptional(ModItems.WHEAT_DOUGH.getId())
                .addOptional(ModItems.RAW_PASTA.getId());
        tag(TCItemTags.PIGLIN_MERCHANT_FOOD)
                .add(Items.APPLE)
                .add(Items.GOLDEN_APPLE)
                .add(Items.ENCHANTED_GOLDEN_APPLE)
                .add(Items.CARROT)
                .add(Items.GOLDEN_CARROT)
                .add(Items.POTATO)
                .add(Items.BEETROOT)
                .addTag(ItemTags.PIGLIN_FOOD);
        tag(TCItemTags.RAW_BACON)
                .addOptional(ModItems.BACON.getId());
        tag(TCItemTags.RAW_PORK)
                .add(Items.PORKCHOP)
                .addTag(TCItemTags.RAW_BACON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("netherssdelight:hoglin_loin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:ham")));
        tag(TCItemTags.RAW_MUTTON)
                .add(Items.MUTTON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:mutton_chops")));
        tag(TCItemTags.RAW_CHICKEN)
                .add(Items.CHICKEN)
                .addOptional(ModItems.CHICKEN_CUTS.getId());
        tag(TCItemTags.RAW_BEEF)
                .add(Items.BEEF)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:minced_beef")));
        tag(TCItemTags.RAW_RABBIT)
                .add(Items.RABBIT);
        tag(TCItemTags.RAW_VENISON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:venison_chops")));
        tag(TCItemTags.RAW_GOAT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:raw_goat")));
        tag(TCItemTags.RAW_MEATS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:bat_wing")))
                .addTag(TCItemTags.RAW_GOAT)
                .addTag(TCItemTags.RAW_VENISON)
                .addTag(TCItemTags.RAW_RABBIT)
                .addTag(TCItemTags.RAW_BEEF)
                .addTag(TCItemTags.RAW_CHICKEN)
                .addTag(TCItemTags.RAW_MUTTON)
                .addTag(TCItemTags.RAW_PORK);
        tag(TCItemTags.COOKED_MEATS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:smoked_wing")))
                .addTag(TCItemTags.COOKED_GOAT)
                .addTag(TCItemTags.COOKED_VENISON)
                .addTag(TCItemTags.COOKED_BEEF)
                .addTag(TCItemTags.COOKED_RABBIT)
                .addTag(TCItemTags.COOKED_PORK)
                .addTag(TCItemTags.COOKED_CHICKEN)
                .addTag(TCItemTags.COOKED_MUTTON);
        tag(TCItemTags.COOKED_GOAT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cooked_goat")));
        tag(TCItemTags.COOKED_VENISON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cooked_venison_chops")));
        tag(TCItemTags.COOKED_RABBIT)
                .add(Items.COOKED_RABBIT);
        tag(TCItemTags.COOKED_BEEF)
                .add(Items.COOKED_BEEF)
                .addOptional(ModItems.BEEF_PATTY.getId());
        tag(TCItemTags.COOKED_BACON)
                .addOptional(ModItems.COOKED_BACON.getId());
        tag(TCItemTags.COOKED_PORK)
                .add(Items.COOKED_PORKCHOP)
                .addTag(TCItemTags.COOKED_BACON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:hoglin_sirloin")))
                .addOptional(ModItems.SMOKED_HAM.getId());
        tag(TCItemTags.COOKED_CHICKEN)
                .add(Items.COOKED_CHICKEN)
                .addOptional(ModItems.COOKED_CHICKEN_CUTS.getId());
        tag(TCItemTags.COOKED_MUTTON)
                .add(Items.COOKED_MUTTON)
                .addOptional(ModItems.COOKED_MUTTON_CHOPS.getId());
        tag(TCItemTags.SOUPS)
                .addTag(TCItemTags.FISH_SOUPS)
                .addTag(TCItemTags.VEGETABLE_SOUPS)
                .addTag(TCItemTags.MEAT_SOUPS);
        tag(TCItemTags.MEAT_SOUPS)
                .add(Items.RABBIT_STEW)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:noodle_soup_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:chicken_soup_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:rabbit_stew_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:beef_stew_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:noodle_soup_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:pumpkin_soup_cup")))
                .addOptional(ModItems.PUMPKIN_SOUP.getId())
                .addOptional(ModItems.BONE_BROTH.getId())
                .addOptional(ModItems.NOODLE_SOUP.getId())
                .addOptional(ModItems.BEEF_STEW.getId())
                .addOptional(ModItems.CHICKEN_SOUP.getId());
        tag(TCItemTags.VEGETABLE_SOUPS)
                .add(Items.MUSHROOM_STEW)
                .addOptional(ModItems.BAKED_COD_STEW.getId())
                .addOptional(ModItems.VEGETABLE_SOUP.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:cave_soup_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:mushroom_stew_cup")));
        tag(TCItemTags.SUSHI)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("oceansdelight:fugu_roll")))
                .addOptional(ModItems.KELP_ROLL.getId())
                .addOptional(ModItems.SALMON_ROLL.getId())
                .addOptional(ModItems.COD_ROLL.getId());
        tag(TCItemTags.FISH_SOUPS)
                .addOptional(ModItems.FISH_STEW.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:tropical_stew")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:seafood_gumbo")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:bisque")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("crabbersdelight:clam_chowder")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:fish_stew_cup")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:baked_cod_stew_cup")));
    }

    private void addCollectibleCoinTags() {
        tag(TCItemTags.CELEBRATION_COINS_TAG)
                .addTag(TCItemTags.HERO_COINS_TAG)
                .addTag(TCItemTags.HOLIDAY_COINS_TAG);
        tag(TCItemTags.LIFETIME_COINS_TAG)
                .add(TCItems.COLLECTIBLE_COIN_LITTLE_BEAR.get())
                .add(TCItems.COLLECTIBLE_COIN_TUXEDO_CAT.get())
                .add(TCItems.COLLECTIBLE_COIN_SCHOLAR_OWL.get());
        tag(TCItemTags.PATRON_COINS_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PATRON_CARNATION.get())
                .add(TCItems.COLLECTIBLE_COIN_PATRON_COSMOS.get())
                .add(TCItems.COLLECTIBLE_COIN_PATRON_SUNFLOWER.get());
        tag(TCItemTags.ANNIVERSARY_COINS_TAG)
                .addTag(TCItemTags.LIFETIME_COINS_TAG)
                .addTag(TCItemTags.PATRON_COINS_TAG);
        tag(TCItemTags.NEW_YEAR_COIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_NEW_YEAR.get());
        tag(TCItemTags.BIRTHDAY_COIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BIRTHDAY.get());
        tag(TCItemTags.CHRISTMAS_COIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CHRISTMAS.get());
        tag(TCItemTags.HALLOWEEN_COIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HALLOWEEN.get());
        tag(TCItemTags.EASTER_COIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_EASTER.get());
        tag(TCItemTags.HOLIDAY_COINS_TAG)
                .addTag(TCItemTags.ANNIVERSARY_COINS_TAG)
                .add(TCItems.COLLECTIBLE_COIN_NEW_YEAR.get())
                .add(TCItems.COLLECTIBLE_COIN_BIRTHDAY.get())
                .add(TCItems.COLLECTIBLE_COIN_CHRISTMAS.get())
                .add(TCItems.COLLECTIBLE_COIN_HALLOWEEN.get())
                .add(TCItems.COLLECTIBLE_COIN_EASTER.get());
        tag(TCItemTags.HERO_COINS_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HERO_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_HERO_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_HERO_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_HERO_NETHERITE.get());
        tag(TCItemTags.FISH_COINS_COD_TAG)
                .add(TCItems.COLLECTIBLE_COIN_COD_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_COD_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_COD_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_COD_NETHERITE.get());
        tag(TCItemTags.FISH_COINS_SALMON_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SALMON_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SALMON_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SALMON_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SALMON_NETHERITE.get());
        tag(TCItemTags.FISH_COINS_PUFFERFISH_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PUFFERFISH_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PUFFERFISH_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PUFFERFISH_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PUFFERFISH_NETHERITE.get());
        tag(TCItemTags.FISH_COINS_TROPICAL_FISH_TAG)
                .add(TCItems.COLLECTIBLE_COIN_TROPICAL_FISH_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_TROPICAL_FISH_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_TROPICAL_FISH_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_TROPICAL_FISH_NETHERITE.get());
        tag(TCItemTags.FISH_COINS_TAG)
                .addTag(TCItemTags.FISH_COINS_COD_TAG)
                .addTag(TCItemTags.FISH_COINS_SALMON_TAG)
                .addTag(TCItemTags.FISH_COINS_PUFFERFISH_TAG)
                .addTag(TCItemTags.FISH_COINS_TROPICAL_FISH_TAG);
        tag(TCItemTags.AERIAL_COINS_ALLAY_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ALLAY_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ALLAY_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ALLAY_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ALLAY_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_BAT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BAT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_BAT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_BAT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_BAT_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_DRAGON_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ENDER_DRAGON_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDER_DRAGON_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDER_DRAGON_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDER_DRAGON_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_GHAST_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GHAST_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GHAST_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GHAST_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GHAST_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_HAPPY_GHAST_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HAPPY_GHAST_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_HAPPY_GHAST_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_HAPPY_GHAST_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_HAPPY_GHAST_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_PARROT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PARROT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PARROT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PARROT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PARROT_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_PHANTOM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PHANTOM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PHANTOM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PHANTOM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PHANTOM_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_GLARE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GLARE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GLARE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GLARE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GLARE_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_BEE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BEE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_BEE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_BEE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_BEE_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_BREEZE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BREEZE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_BREEZE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_BREEZE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_BREEZE_NETHERITE.get());
        tag(TCItemTags.AERIAL_COINS_TAG)
                .addTag(TCItemTags.AERIAL_COINS_BREEZE_TAG)
                .addTag(TCItemTags.AERIAL_COINS_BEE_TAG)
                .addTag(TCItemTags.AERIAL_COINS_GLARE_TAG)
                .addTag(TCItemTags.AERIAL_COINS_PHANTOM_TAG)
                .addTag(TCItemTags.AERIAL_COINS_PARROT_TAG)
                .addTag(TCItemTags.AERIAL_COINS_GHAST_TAG)
                .addTag(TCItemTags.AERIAL_COINS_HAPPY_GHAST_TAG)
                .addTag(TCItemTags.AERIAL_COINS_DRAGON_TAG)
                .addTag(TCItemTags.AERIAL_COINS_BAT_TAG)
                .addTag(TCItemTags.AERIAL_COINS_ALLAY_TAG);
        tag(TCItemTags.AQUATIC_COINS_ELDER_GUARDIAN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ELDER_GUARDIAN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ELDER_GUARDIAN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ELDER_GUARDIAN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ELDER_GUARDIAN_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_GUARDIAN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GUARDIAN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARDIAN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARDIAN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARDIAN_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_FROG_TAG)
                .add(TCItems.COLLECTIBLE_COIN_FROG_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_FROG_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_FROG_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_FROG_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_GLOW_SQUID_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GLOW_SQUID_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GLOW_SQUID_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GLOW_SQUID_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GLOW_SQUID_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_SQUID_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SQUID_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUID_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUID_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUID_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_AXOLOTL_TAG)
                .add(TCItems.COLLECTIBLE_COIN_AXOLOTL_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_AXOLOTL_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_AXOLOTL_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_AXOLOTL_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_PENGUIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PENGUIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PENGUIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PENGUIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PENGUIN_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_TURTLE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_TURTLE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_TURTLE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_TURTLE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_TURTLE_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_TADPOLE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_TADPOLE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_TADPOLE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_TADPOLE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_TADPOLE_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_CRAB_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CRAB_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CRAB_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CRAB_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CRAB_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_DOLPHIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_DOLPHIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_DOLPHIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_DOLPHIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_DOLPHIN_NETHERITE.get());
        tag(TCItemTags.AQUATIC_COINS_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_ELDER_GUARDIAN_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_GUARDIAN_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_FROG_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_GLOW_SQUID_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_SQUID_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_AXOLOTL_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_PENGUIN_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_TURTLE_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_TADPOLE_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_CRAB_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_DOLPHIN_TAG);
        tag(TCItemTags.STEED_COINS_HORSE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HORSE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_HORSE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_HORSE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_HORSE_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_DONKEY_TAG)
                .add(TCItems.COLLECTIBLE_COIN_DONKEY_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_DONKEY_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_DONKEY_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_DONKEY_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_MULE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_MULE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_MULE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_MULE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_MULE_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_SKELETON_HORSE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_HORSE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_HORSE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_HORSE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_HORSE_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_ZOMBIE_HORSE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_HORSE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_HORSE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_HORSE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_HORSE_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_LLAMA_TAG)
                .add(TCItems.COLLECTIBLE_COIN_LLAMA_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_LLAMA_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_LLAMA_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_LLAMA_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_TRADER_LLAMA_TAG)
                .add(TCItems.COLLECTIBLE_COIN_TRADER_LLAMA_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_TRADER_LLAMA_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_TRADER_LLAMA_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_TRADER_LLAMA_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_CAMEL_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CAMEL_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CAMEL_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CAMEL_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CAMEL_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_STRIDER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_STRIDER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_STRIDER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_STRIDER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_STRIDER_NETHERITE.get());
        tag(TCItemTags.STEED_COINS_TAG)
                .addTag(TCItemTags.STEED_COINS_HORSE_TAG)
                .addTag(TCItemTags.STEED_COINS_DONKEY_TAG)
                .addTag(TCItemTags.STEED_COINS_MULE_TAG)
                .addTag(TCItemTags.STEED_COINS_SKELETON_HORSE_TAG)
                .addTag(TCItemTags.STEED_COINS_ZOMBIE_HORSE_TAG)
                .addTag(TCItemTags.STEED_COINS_LLAMA_TAG)
                .addTag(TCItemTags.STEED_COINS_TRADER_LLAMA_TAG)
                .addTag(TCItemTags.STEED_COINS_CAMEL_TAG)
                .addTag(TCItemTags.STEED_COINS_STRIDER_TAG);
        tag(TCItemTags.BREEDABLE_COINS_ARMADILLO_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ARMADILLO_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ARMADILLO_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ARMADILLO_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ARMADILLO_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_CAT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CAT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CAT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CAT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CAT_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_CHICKEN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CHICKEN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CHICKEN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CHICKEN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CHICKEN_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_COW_TAG)
                .add(TCItems.COLLECTIBLE_COIN_COW_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_COW_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_COW_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_COW_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_FOX_TAG)
                .add(TCItems.COLLECTIBLE_COIN_FOX_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_FOX_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_FOX_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_FOX_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_GOAT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GOAT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GOAT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GOAT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GOAT_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_MOOBLOOM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_MOOBLOOM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOBLOOM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOBLOOM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOBLOOM_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_MOOSHROOM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_MOOSHROOM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOSHROOM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOSHROOM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_MOOSHROOM_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_OCELOT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_OCELOT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_OCELOT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_OCELOT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_OCELOT_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_PANDA_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PANDA_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PANDA_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PANDA_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PANDA_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_PIG_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PIG_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PIG_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PIG_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PIG_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_RABBIT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_RABBIT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_RABBIT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_RABBIT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_RABBIT_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_SHEEP_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SHEEP_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SHEEP_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SHEEP_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SHEEP_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_WOLF_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WOLF_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WOLF_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WOLF_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WOLF_NETHERITE.get());
        tag(TCItemTags.BREEDABLE_COINS_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_ARMADILLO_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_CAT_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_CHICKEN_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_COW_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_FOX_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_GOAT_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_MOOBLOOM_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_MOOSHROOM_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_OCELOT_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_PANDA_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_PIG_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_RABBIT_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_SHEEP_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_WOLF_TAG);
        tag(TCItemTags.WILD_COINS_MAULER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_MAULER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_MAULER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_MAULER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_MAULER_NETHERITE.get());
        tag(TCItemTags.WILD_COINS_POLAR_BEAR_TAG)
                .add(TCItems.COLLECTIBLE_COIN_POLAR_BEAR_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_POLAR_BEAR_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_POLAR_BEAR_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_POLAR_BEAR_NETHERITE.get());
        tag(TCItemTags.WILD_COINS_SQUIRREL_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SQUIRREL_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUIRREL_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUIRREL_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SQUIRREL_NETHERITE.get());
        tag(TCItemTags.WILD_COINS_TAG)
                .addTag(TCItemTags.WILD_COINS_MAULER_TAG)
                .addTag(TCItemTags.WILD_COINS_POLAR_BEAR_TAG)
                .addTag(TCItemTags.WILD_COINS_SQUIRREL_TAG);
        tag(TCItemTags.ARTHROPOD_COINS_CAVE_SPIDER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CAVE_SPIDER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CAVE_SPIDER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CAVE_SPIDER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CAVE_SPIDER_NETHERITE.get());
        tag(TCItemTags.ARTHROPOD_COINS_ENDERMITE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ENDERMITE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMITE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMITE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMITE_NETHERITE.get());
        tag(TCItemTags.ARTHROPOD_COINS_SILVERFISH_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SILVERFISH_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SILVERFISH_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SILVERFISH_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SILVERFISH_NETHERITE.get());
        tag(TCItemTags.ARTHROPOD_COINS_SPIDER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SPIDER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SPIDER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SPIDER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SPIDER_NETHERITE.get());
        tag(TCItemTags.ARTHROPOD_COINS_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_CAVE_SPIDER_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_ENDERMITE_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_SILVERFISH_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_SPIDER_TAG);
        tag(TCItemTags.UNDEAD_COINS_DROWNED_TAG)
                .add(TCItems.COLLECTIBLE_COIN_DROWNED_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_DROWNED_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_DROWNED_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_DROWNED_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_HUSK_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HUSK_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_HUSK_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_HUSK_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_HUSK_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_SKELETON_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SKELETON_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_STRAY_TAG)
                .add(TCItems.COLLECTIBLE_COIN_STRAY_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_STRAY_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_STRAY_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_STRAY_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_WITHER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WITHER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_WITHER_SKELETON_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WITHER_SKELETON_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_SKELETON_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_SKELETON_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WITHER_SKELETON_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_ZOGLIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ZOGLIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOGLIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOGLIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOGLIN_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_ZOMBIE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_ZOMBIE_VILLAGER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_VILLAGER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_VILLAGER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_VILLAGER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIE_VILLAGER_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_ZOMBIFIED_PIGLIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIFIED_PIGLIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIFIED_PIGLIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIFIED_PIGLIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ZOMBIFIED_PIGLIN_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_BOGGED_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BOGGED_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_BOGGED_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_BOGGED_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_BOGGED_NETHERITE.get());
        tag(TCItemTags.UNDEAD_COINS_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_BOGGED_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_DROWNED_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_HUSK_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_SKELETON_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_STRAY_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_WITHER_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_WITHER_SKELETON_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_ZOGLIN_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_ZOMBIE_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_ZOMBIE_VILLAGER_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_ZOMBIFIED_PIGLIN_TAG);
        tag(TCItemTags.PIGLIN_COINS_PIGLIN_BRUTE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_BRUTE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_BRUTE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_BRUTE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_BRUTE_NETHERITE.get());
        tag(TCItemTags.PIGLIN_COINS_HOGLIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_HOGLIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_HOGLIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_HOGLIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_HOGLIN_NETHERITE.get());
        tag(TCItemTags.PIGLIN_COINS_PIGLIN_MERCHANT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_MERCHANT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_MERCHANT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_MERCHANT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_MERCHANT_NETHERITE.get());
        tag(TCItemTags.PIGLIN_COINS_PIGLIN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PIGLIN_NETHERITE.get());
        tag(TCItemTags.PIGLIN_COINS_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_PIGLIN_BRUTE_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_HOGLIN_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_PIGLIN_MERCHANT_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_PIGLIN_TAG);
        tag(TCItemTags.RAIDER_COINS_EVOKER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_EVOKER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_EVOKER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_EVOKER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_EVOKER_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_ICEOLOGER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ICEOLOGER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ICEOLOGER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ICEOLOGER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ICEOLOGER_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_ILLUSIONER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ILLUSIONER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ILLUSIONER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ILLUSIONER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ILLUSIONER_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_PILLAGER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_PILLAGER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_PILLAGER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_PILLAGER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_PILLAGER_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_RAVAGER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_RAVAGER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_RAVAGER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_RAVAGER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_RAVAGER_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_VEX_TAG)
                .add(TCItems.COLLECTIBLE_COIN_VEX_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_VEX_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_VEX_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_VEX_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_VINDICATOR_TAG)
                .add(TCItems.COLLECTIBLE_COIN_VINDICATOR_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_VINDICATOR_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_VINDICATOR_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_VINDICATOR_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_WITCH_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WITCH_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WITCH_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WITCH_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WITCH_NETHERITE.get());
        tag(TCItemTags.RAIDER_COINS_TAG)
                .addTag(TCItemTags.RAIDER_COINS_EVOKER_TAG)
                .addTag(TCItemTags.RAIDER_COINS_ICEOLOGER_TAG)
                .addTag(TCItemTags.RAIDER_COINS_ILLUSIONER_TAG)
                .addTag(TCItemTags.RAIDER_COINS_PILLAGER_TAG)
                .addTag(TCItemTags.RAIDER_COINS_RAVAGER_TAG)
                .addTag(TCItemTags.RAIDER_COINS_VEX_TAG)
                .addTag(TCItemTags.RAIDER_COINS_VINDICATOR_TAG)
                .addTag(TCItemTags.RAIDER_COINS_WITCH_TAG);
        tag(TCItemTags.GOLEM_COINS_COPPER_GOLEM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_COPPER_GOLEM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_COPPER_GOLEM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_COPPER_GOLEM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_COPPER_GOLEM_NETHERITE.get());
        tag(TCItemTags.GOLEM_COINS_IRON_GOLEM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_IRON_GOLEM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_IRON_GOLEM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_IRON_GOLEM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_IRON_GOLEM_NETHERITE.get());
        tag(TCItemTags.GOLEM_COINS_SNOW_GOLEM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SNOW_GOLEM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SNOW_GOLEM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SNOW_GOLEM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SNOW_GOLEM_NETHERITE.get());
        tag(TCItemTags.GOLEM_COINS_TUFF_GOLEM_TAG)
                .add(TCItems.COLLECTIBLE_COIN_TUFF_GOLEM_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_TUFF_GOLEM_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_TUFF_GOLEM_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_TUFF_GOLEM_NETHERITE.get());
        tag(TCItemTags.GOLEM_COINS_TAG)
                .addTag(TCItemTags.GOLEM_COINS_COPPER_GOLEM_TAG)
                .addTag(TCItemTags.GOLEM_COINS_IRON_GOLEM_TAG)
                .addTag(TCItemTags.GOLEM_COINS_SNOW_GOLEM_TAG)
                .addTag(TCItemTags.GOLEM_COINS_TUFF_GOLEM_TAG);
        tag(TCItemTags.SLIME_COINS_MAGMA_CUBE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_MAGMA_CUBE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_MAGMA_CUBE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_MAGMA_CUBE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_MAGMA_CUBE_NETHERITE.get());
        tag(TCItemTags.SLIME_COINS_SLIME_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SLIME_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SLIME_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SLIME_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SLIME_NETHERITE.get());
        tag(TCItemTags.SLIME_COINS_TAG)
                .addTag(TCItemTags.SLIME_COINS_MAGMA_CUBE_TAG)
                .addTag(TCItemTags.SLIME_COINS_SLIME_TAG);
        tag(TCItemTags.HUMANOID_COINS_GUARD_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GUARD_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARD_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARD_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GUARD_NETHERITE.get());
        tag(TCItemTags.HUMANOID_COINS_NUMISMATIST_TAG)
                .add(TCItems.COLLECTIBLE_COIN_NUMISMATIST_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_NUMISMATIST_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_NUMISMATIST_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_NUMISMATIST_NETHERITE.get());
        tag(TCItemTags.HUMANOID_COINS_RASCAL_TAG)
                .add(TCItems.COLLECTIBLE_COIN_RASCAL_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_RASCAL_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_RASCAL_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_RASCAL_NETHERITE.get());
        tag(TCItemTags.HUMANOID_COINS_VILLAGER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_VILLAGER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_VILLAGER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_VILLAGER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_VILLAGER_NETHERITE.get());
        tag(TCItemTags.HUMANOID_COINS_WANDERING_TRADER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WANDERING_TRADER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WANDERING_TRADER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WANDERING_TRADER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WANDERING_TRADER_NETHERITE.get());
        tag(TCItemTags.HUMANOID_COINS_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_GUARD_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_NUMISMATIST_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_RASCAL_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_VILLAGER_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_WANDERING_TRADER_TAG);
        tag(TCItemTags.BLAZE_COINS_BLAZE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_BLAZE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_BLAZE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_BLAZE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_BLAZE_NETHERITE.get());
        tag(TCItemTags.BLAZE_COINS_WILDFIRE_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WILDFIRE_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WILDFIRE_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WILDFIRE_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WILDFIRE_NETHERITE.get());
        tag(TCItemTags.BLAZE_COINS_TAG)
                .addTag(TCItemTags.BLAZE_COINS_BLAZE_TAG)
                .addTag(TCItemTags.BLAZE_COINS_WILDFIRE_TAG);
        tag(TCItemTags.MISC_COINS_CREEPER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CREEPER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CREEPER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CREEPER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CREEPER_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_ENDERMAN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_ENDERMAN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMAN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMAN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_ENDERMAN_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_GIANT_TAG)
                .add(TCItems.COLLECTIBLE_COIN_GIANT_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_GIANT_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_GIANT_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_GIANT_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_SHULKER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SHULKER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SHULKER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SHULKER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SHULKER_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_WARDEN_TAG)
                .add(TCItems.COLLECTIBLE_COIN_WARDEN_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_WARDEN_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_WARDEN_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_WARDEN_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_SNIFFER_TAG)
                .add(TCItems.COLLECTIBLE_COIN_SNIFFER_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_SNIFFER_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_SNIFFER_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_SNIFFER_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_CREAKING_TAG)
                .add(TCItems.COLLECTIBLE_COIN_CREAKING_COPPER.get())
                .add(TCItems.COLLECTIBLE_COIN_CREAKING_IRON.get())
                .add(TCItems.COLLECTIBLE_COIN_CREAKING_GOLD.get())
                .add(TCItems.COLLECTIBLE_COIN_CREAKING_NETHERITE.get());
        tag(TCItemTags.MISC_COINS_TAG)
                .addTag(TCItemTags.MISC_COINS_CREEPER_TAG)
                .addTag(TCItemTags.MISC_COINS_ENDERMAN_TAG)
                .addTag(TCItemTags.MISC_COINS_GIANT_TAG)
                .addTag(TCItemTags.MISC_COINS_SHULKER_TAG)
                .addTag(TCItemTags.MISC_COINS_SNIFFER_TAG)
                .addTag(TCItemTags.MISC_COINS_WARDEN_TAG)
                .addTag(TCItemTags.MISC_COINS_CREAKING_TAG);

        tag(TCItemTags.BOSS_COINS_TAG)
                .addTag(TCItemTags.MISC_COINS_WARDEN_TAG)
                .addTag(TCItemTags.BLAZE_COINS_WILDFIRE_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_WITHER_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_ELDER_GUARDIAN_TAG)
                .addTag(TCItemTags.AERIAL_COINS_DRAGON_TAG);

        tag(TCItemTags.COLLECTIBLE_COINS_TAG)
                // Top-level set tags
                .addTag(TCItemTags.AERIAL_COINS_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_TAG)
                .addTag(TCItemTags.BLAZE_COINS_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_TAG)
                .addTag(TCItemTags.CELEBRATION_COINS_TAG)
                .addTag(TCItemTags.FISH_COINS_TAG)
                .addTag(TCItemTags.GOLEM_COINS_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_TAG)
                .addTag(TCItemTags.MISC_COINS_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_TAG)
                .addTag(TCItemTags.RAIDER_COINS_TAG)
                .addTag(TCItemTags.SLIME_COINS_TAG)
                .addTag(TCItemTags.STEED_COINS_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_TAG)
                .addTag(TCItemTags.WILD_COINS_TAG);
        tag(TCItemTags.ENTITY_COIN_SETS_TAG)
                .addTag(TCItemTags.MISC_COINS_TAG)
                .addTag(TCItemTags.BLAZE_COINS_TAG)
                .addTag(TCItemTags.HUMANOID_COINS_TAG)
                .addTag(TCItemTags.SLIME_COINS_TAG)
                .addTag(TCItemTags.GOLEM_COINS_TAG)
                .addTag(TCItemTags.RAIDER_COINS_TAG)
                .addTag(TCItemTags.PIGLIN_COINS_TAG)
                .addTag(TCItemTags.UNDEAD_COINS_TAG)
                .addTag(TCItemTags.ARTHROPOD_COINS_TAG)
                .addTag(TCItemTags.WILD_COINS_TAG)
                .addTag(TCItemTags.BREEDABLE_COINS_TAG)
                .addTag(TCItemTags.STEED_COINS_TAG)
                .addTag(TCItemTags.AQUATIC_COINS_TAG)
                .addTag(TCItemTags.AERIAL_COINS_TAG)
                .addTag(TCItemTags.FISH_COINS_TAG);
    }
}