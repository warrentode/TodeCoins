package com.github.warrentode.todecoins.datagen.loot_tables.merchant;

import com.faboslav.friendsandfoes.init.FriendsAndFoesItems;
import com.github.warrentode.todecoins.block.ModBlocks;
import com.github.warrentode.todecoins.item.ModItems;
import com.github.warrentode.todecoins.loot.VillagerTradeLootTables;
import com.github.warrentode.todecoins.loot.conditions.ModCheckCondition;
import com.github.warrentode.todecoins.util.tags.ForgeTags;
import com.github.warrentode.todecoins.util.tags.ModTags;
import net.mehvahdjukaar.cagerium.Cagerium;
import net.minecraft.data.loot.ChestLoot;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.TagEntry;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceCondition;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraftforge.common.Tags;
import org.jetbrains.annotations.NotNull;

import java.util.function.BiConsumer;

import static com.github.warrentode.todecoins.datagen.ModLootTableGenProvider.*;

public class MerchantOffersGen extends ChestLoot {
    @Override
    public void accept(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        consumer.accept(VillagerTradeLootTables.TWENTY_SEVEN_LUCKY_COIN_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHERITE_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.NETHERITE_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.NETHERITE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BUDDING_AMETHYST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.NETHER_STAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(23))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_THREAD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FABRIC.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(VillagerTradeLootTables.EMERALD_HALF_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(VillagerTradeLootTables.EMERALD_QUARTER_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                ));
        consumer.accept(VillagerTradeLootTables.THREE_LUCKY_COIN_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.BUDDING_AMETHYST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .when(LootItemRandomChanceCondition.randomChance(0.000001F))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(28))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(57))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(57))))
                        .add(LootItem.lootTableItem(Items.NETHER_STAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .when(LootItemRandomChanceCondition.randomChance(0.000001F))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.OCHRE_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.VERDANT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PEARLESCENT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(VillagerTradeLootTables.FOUR_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHERITE_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(VillagerTradeLootTables.SINGLE_LUCKY_COIN_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(38))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(19))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                ));
        consumer.accept(VillagerTradeLootTables.SINGLE_LUCKY_COIN_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                ));
        consumer.accept(VillagerTradeLootTables.SINGLE_LUCKY_COIN_BAG_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.LUCKY_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_HALF_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.EMERALD_QUARTER_BANK_NOTE_BAG.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                ));
        consumer.accept(VillagerTradeLootTables.THIRTY_POTS_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_SMOOTH_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SHULKER_SHELL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FRUIT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(VillagerTradeLootTables.THIRTY_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(VillagerTradeLootTables.THIRTY_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(15))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(VillagerTradeLootTables.SIXTY_POTS_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(45))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(11))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_SMOOTH_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.PHANTOM_MEMBRANE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.SHULKER_SHELL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DRAGON_HEAD)
                                .when(LootItemRandomChanceCondition.randomChance(0.001F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ELYTRA)
                                .when(LootItemRandomChanceCondition.randomChance(0.001F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.CHORUS_FRUIT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(VillagerTradeLootTables.SIXTY_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(22))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(VillagerTradeLootTables.SIXTY_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                ));
        consumer.accept(VillagerTradeLootTables.FOUR_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(VillagerTradeLootTables.FOUR_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(Items.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(Items.IRON_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_COARSE_WOVE_PAPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT)
                                .when(LootItemRandomChanceCondition.randomChance(0.10F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.SLIME_BALL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.BLAZE_POWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.BLAZE_ROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.MAGMA_CREAM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(VillagerTradeLootTables.TWO_POT_OF_GOLD_VALUE_ITEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_FIBER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Blocks.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(Items.STRING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(Items.RABBIT_FOOT)
                                .when(LootItemRandomChanceCondition.randomChance(0.10F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.GUNPOWDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.DRAGON_BREATH)
                                .when(LootItemRandomChanceCondition.randomChance(0.01F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(VillagerTradeLootTables.TWO_POT_OF_GOLD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Blocks.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(VillagerTradeLootTables.TWO_POTS_OF_GOLD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get().asItem()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get().asItem()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(VillagerTradeLootTables.EMERALD_BANK_NOTE_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get()).when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(VillagerTradeLootTables.EMERALD_BANK_NOTE_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_CRYSTALS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.PRISMARINE_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.LAPIS_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.GHAST_TEAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(13))))
                        .add(LootItem.lootTableItem(Items.ENDER_EYE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.END_CRYSTAL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.ECHO_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                ));
        consumer.accept(VillagerTradeLootTables.EMERALD_BANK_NOTE_VALUE_METALS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.COPPER_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.IRON_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(28))))
                        .add(LootItem.lootTableItem(Items.GOLD_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_NUGGET.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_INGOT.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_NUGGET.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));

        consumer.accept(VillagerTradeLootTables.SINGLE_EMERALD_VALUE_METALS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_NUGGET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.GOLD_NUGGET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(VillagerTradeLootTables.SINGLE_EMERALD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(VillagerTradeLootTables.FIVE_EMERALD_VALUE_GEMS,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.AMETHYST_SHARD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.AMETHYST_CLUSTER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LARGE_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.MEDIUM_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.SMALL_AMETHYST_BUD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.DIAMOND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.ENDER_PEARL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.GLOWSTONE_DUST)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.LAPIS_LAZULI)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.REDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(10))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.EMERALD))
                        .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5)))
                ));
        consumer.accept(VillagerTradeLootTables.SINGLE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(VillagerTradeLootTables.TWO_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                ));
        consumer.accept(VillagerTradeLootTables.FIVE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(40))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(30))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(15))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                ));
        consumer.accept(VillagerTradeLootTables.SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                ));
        consumer.accept(VillagerTradeLootTables.NINE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(27))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                ));
        consumer.accept(VillagerTradeLootTables.EIGHT_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(48))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(5))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                ));
        consumer.accept(VillagerTradeLootTables.SEVEN_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(56))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(21))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(7))))
                ));
        consumer.accept(VillagerTradeLootTables.FOUR_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(32))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(VillagerTradeLootTables.THIRTY_SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(ModBlocks.ENDONIAN_COIN_BAG.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_QUARTER_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHERITE_COIN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.EMERALD_HALF_BANK_NOTE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(36))))
                        .add(LootItem.lootTableItem(Items.EMERALD_BLOCK).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(VillagerTradeLootTables.THREE_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.COPPER_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(54))))
                        .add(LootItem.lootTableItem(ModBlocks.IRON_COIN_BAG.get().asItem()).when(IN_OVERWORLD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(24))))
                        .add(LootItem.lootTableItem(ModBlocks.GOLD_COIN_BAG.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(18))))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(2))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(3))))
                ));
        consumer.accept(VillagerTradeLootTables.TWENTY_SIX_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(17))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(26))))
                ));
        consumer.accept(VillagerTradeLootTables.TWENTY_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(13))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(20))))
                ));
        consumer.accept(VillagerTradeLootTables.FOURTEEN_EMERALD_VALUE_CURRENCY,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(ModBlocks.POT_OF_GOLD.get().asItem())
                                .when(IN_OVERWORLD.or(IN_NETHER))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(9))))
                        .add(LootItem.lootTableItem(ModItems.NETHER_GOLD_COIN.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(42))))
                        .add(LootItem.lootTableItem(ModBlocks.NETHER_GOLD_COIN_BAG.get()).when(IN_NETHER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(ModItems.ENDONIAN_COIN.get()).when(IN_THE_END)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                        .add(LootItem.lootTableItem(Items.EMERALD).when(IN_OVERWORLD.invert())
                                .when(IN_NETHER.invert()).when(IN_THE_END.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(14))))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_RAW_MEATS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.RAW_MEATS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_MEAT_SOUPS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.MEAT_SOUPS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_COOKED_MEATS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKED_MEATS))
                ));
        consumer.accept(VillagerTradeLootTables.STONE_TIER_KNIVES,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.FLINT_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmers_delight")))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_SALTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.SALTS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_ASH_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.ASH))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_FOX_FOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.FOX_FOOD))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_GLASS_PANES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(Tags.Items.GLASS_PANES))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_BANNER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.BANNERS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_VEGGIES_AND_GRAINS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_VEGETABLES))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_GRAINS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_BREADS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.BREAD))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_GOURDS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.GOURDS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_PIES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.PIES))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_FRUITS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CROPS_FRUIT))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_COOKIES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKIES))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_CAKES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.CAKES))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_PREPARED_SEAFOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.COOKED_FISHES))
                        .add(TagEntry.expandTag(ForgeTags.Items.FISH_SOUPS))
                        .add(TagEntry.expandTag(ForgeTags.Items.SUSHI))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_RAW_SEAFOOD_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.RAW_FISHES))
                ));
        consumer.accept(VillagerTradeLootTables.FISHING_GEAR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.FISHING_ROD))
                        .add(LootItem.lootTableItem(Items.ACACIA_BOAT)
                                .when(IN_VILLAGE_SAVANNA.or(IN_SAVANNA)
                                        .or(IN_SAVANNA_PLATEAU).or(IN_WINDSWEPT_SAVANNA)))
                        .add(LootItem.lootTableItem(Items.BIRCH_BOAT)
                                .when(IN_BIRCH_FOREST.or(IN_DARK_FOREST)
                                        .or(IN_FOREST).or(IN_OLD_GROWTH_BIRCH_FOREST)
                                        .or(IN_MEADOW)))
                        .add(LootItem.lootTableItem(Items.DARK_OAK_BOAT)
                                .when(IN_DARK_FOREST))
                        .add(LootItem.lootTableItem(Items.JUNGLE_BOAT)
                                .when(IN_JUNGLE.or(IN_BAMBOO_JUNGLE)
                                        .or(IN_SPARSE_JUNGLE)))
                        .add(LootItem.lootTableItem(Items.MANGROVE_BOAT)
                                .when(IN_MANGROVE_SWAMP))
                        .add(LootItem.lootTableItem(Items.SPRUCE_BOAT)
                                .when(IN_OLD_GROWTH_PINE_TAIGA.or(IN_OLD_GROWTH_SPRUCE_TAIGA)
                                        .or(IN_SNOWY_TAIGA).or(IN_SNOWY_PLAINS).or(IN_TAIGA)
                                        .or(IN_WINDSWEPT_FOREST).or(IN_GROVE)))
                        .add(LootItem.lootTableItem(Items.OAK_BOAT))
                        .add(TagEntry.expandTag(ForgeTags.Items.CRAB_TRAP))
                ));

        consumer.accept(VillagerTradeLootTables.LEATHER_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_HELMET))
                ));
        consumer.accept(VillagerTradeLootTables.CHAINMAIL_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_HELMET))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_HELMET))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HELMET))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HELMET))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_HELMETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_HELMET))
                ));

        consumer.accept(VillagerTradeLootTables.LEATHER_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_CHESTPLATE))
                ));
        consumer.accept(VillagerTradeLootTables.CHAINMAIL_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_CHESTPLATE))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_CHESTPLATE))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_CHESTPLATE))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_CHESTPLATE))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_CHESTPLATES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_CHESTPLATE))
                ));

        consumer.accept(VillagerTradeLootTables.LEATHER_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_LEGGINGS))
                ));
        consumer.accept(VillagerTradeLootTables.CHAINMAIL_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_LEGGINGS))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_LEGGINGS))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_LEGGINGS))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_LEGGINGS))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_LEGGINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_LEGGINGS))
                ));

        consumer.accept(VillagerTradeLootTables.LEATHER_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_BOOTS))
                ));
        consumer.accept(VillagerTradeLootTables.CHAINMAIL_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.CHAINMAIL_BOOTS))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_BOOTS))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_BOOTS))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_BOOTS))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_BOOTS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_BOOTS))
                ));

        consumer.accept(VillagerTradeLootTables.BOWS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BOW))
                        .add(LootItem.lootTableItem(Items.CROSSBOW))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_QUIVERS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.QUIVERS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_LEATHER_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.LEATHER))
                ));
        consumer.accept(VillagerTradeLootTables.LEATHER_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LEATHER_HORSE_ARMOR))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_HORSE_ARMOR))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HORSE_ARMOR))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_HORSE_ARMOR_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HORSE_ARMOR))
                ));
        consumer.accept(VillagerTradeLootTables.BOOKSHELF_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BOOKSHELF))
                ));
        consumer.accept(VillagerTradeLootTables.LANTERN_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.LANTERN))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_GLASS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(Tags.Items.GLASS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_INK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.INK))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_DYES_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(Tags.Items.DYES))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_WOOL_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.WOOL))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_WOOL_CARPETS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.WOOL_CARPETS))
                ));
        consumer.accept(VillagerTradeLootTables.TAGGED_BEDS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.BEDS))
                ));
        consumer.accept(VillagerTradeLootTables.GUIDE_BOOKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.INK))
                ));
        consumer.accept(VillagerTradeLootTables.PAINTINGS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.PAINTING))
                ));
        consumer.accept(VillagerTradeLootTables.STONE_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.STONE_PICKAXE))
                        .add(LootItem.lootTableItem(Items.STONE_AXE))
                        .add(LootItem.lootTableItem(Items.STONE_SHOVEL))
                        .add(LootItem.lootTableItem(Items.STONE_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.FLINT_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_PICKAXE))
                        .add(LootItem.lootTableItem(Items.IRON_AXE))
                        .add(LootItem.lootTableItem(Items.IRON_SHOVEL))
                        .add(LootItem.lootTableItem(Items.IRON_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.IRON_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.IRON_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.IRON_SWORD))
                        .add(LootItem.lootTableItem(Items.IRON_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.IRON_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_SWORD))
                        .add(LootItem.lootTableItem(Items.GOLDEN_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.GOLDEN_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_SWORD))
                        .add(LootItem.lootTableItem(Items.DIAMOND_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.DIAMOND_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_WEAPONS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_SWORD))
                        .add(LootItem.lootTableItem(Items.NETHERITE_AXE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.NETHERITE_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.GOLD_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.GOLDEN_PICKAXE))
                        .add(LootItem.lootTableItem(Items.GOLDEN_AXE))
                        .add(LootItem.lootTableItem(Items.GOLDEN_SHOVEL))
                        .add(LootItem.lootTableItem(Items.GOLDEN_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.GOLDEN_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.DIAMOND_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.DIAMOND_PICKAXE))
                        .add(LootItem.lootTableItem(Items.DIAMOND_AXE))
                        .add(LootItem.lootTableItem(Items.DIAMOND_SHOVEL))
                        .add(LootItem.lootTableItem(Items.DIAMOND_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.DIAMOND_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.NETHERITE_TIER_TOOLS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.NETHERITE_PICKAXE))
                        .add(LootItem.lootTableItem(Items.NETHERITE_AXE))
                        .add(LootItem.lootTableItem(Items.NETHERITE_SHOVEL))
                        .add(LootItem.lootTableItem(Items.NETHERITE_HOE))
                        .add(LootItem.lootTableItem(vectorwing.farmersdelight.common.registry.ModItems.NETHERITE_KNIFE.get())
                                .when(ModCheckCondition.mod().isLoaded("farmersdelight")))
                ));
        consumer.accept(VillagerTradeLootTables.OVERWORLD_BRICK_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BRICK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                ));
        consumer.accept(VillagerTradeLootTables.OVERWORLD_STONE_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.GRANITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.ANDESITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.DIORITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(20))))
                        .add(LootItem.lootTableItem(Items.SANDSTONE)
                                .when(IN_DESERT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.RED_SANDSTONE)
                                .when(IN_BADLANDS.or(IN_ERODED_BADLANDS)
                                        .or(IN_WOODED_BADLANDS))
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                ));
        consumer.accept(VillagerTradeLootTables.OVERWORLD_BRICK_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.MOSSY_STONE_BRICKS)
                                .when(IN_TAIGA.or(IN_OLD_GROWTH_SPRUCE_TAIGA)
                                        .or(IN_OLD_GROWTH_PINE_TAIGA))
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.MUD_BRICKS)
                                .when(IN_MANGROVE_SWAMP)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_SANDSTONE)
                                .when(IN_DESERT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CHISELED_RED_SANDSTONE)
                                .when(IN_BADLANDS.or(IN_ERODED_BADLANDS)
                                        .or(IN_WOODED_BADLANDS))
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                ));
        consumer.accept(VillagerTradeLootTables.OVERWORLD_POLISHED_STONE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.POLISHED_GRANITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_ANDESITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_DIORITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_SANDSTONE)
                                .when(IN_DESERT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_RED_SANDSTONE)
                                .when(IN_BADLANDS.or(IN_ERODED_BADLANDS)
                                        .or(IN_WOODED_BADLANDS))
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                ));
        consumer.accept(VillagerTradeLootTables.TERRACOTTA_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ItemTags.TERRACOTTA))
                ));
        consumer.accept(VillagerTradeLootTables.GLAZED_TERRACOTTA_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(TagEntry.expandTag(ForgeTags.Items.GLAZED_TERRACOTTA))
                ));
        consumer.accept(VillagerTradeLootTables.OTHER_STONE_BLOCKS_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_PILLAR)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.QUARTZ_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CHISELED_QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_QUARTZ)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DRIPSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.CALCITE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.TUFF)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BASALT)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.CHISELED_POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.POLISHED_BLACKSTONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.DEEPSLATE_TILES)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                        .add(LootItem.lootTableItem(Items.END_STONE)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.END_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(
                                        ConstantValue.exactly(4))))
                ));

        consumer.accept(VillagerTradeLootTables.NUMISMATIST_RARE_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(ItemTags.MUSIC_DISCS))
                                .add(TagEntry.expandTag(ModTags.Items.SOUL_BINDER))
                                .add(LootItem.lootTableItem(Items.HEART_OF_THE_SEA))
                                .add(LootItem.lootTableItem(Items.ENCHANTED_GOLDEN_APPLE))
                                .add(LootItem.lootTableItem(Items.MOJANG_BANNER_PATTERN))
                                .add(LootItem.lootTableItem(Items.TOTEM_OF_UNDYING))
                                .add(LootItem.lootTableItem(Items.DRAGON_BREATH))
                                .add(LootItem.lootTableItem(Items.AMETHYST_BLOCK))
                                .add(LootItem.lootTableItem(Items.ELYTRA))
                                .add(LootItem.lootTableItem(Cagerium.TERRARIUM_BASE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.CAGE_BASE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.PLATE_GEM.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(Cagerium.FIRE_UPGRADE.get())
                                        .when(ModCheckCondition.mod().isLoaded("cagerium")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.TOTEM_OF_ILLUSION.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.TOTEM_OF_FREEZING.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                                .add(LootItem.lootTableItem(FriendsAndFoesItems.WILDFIRE_CROWN_FRAGMENT.get())
                                        .when(ModCheckCondition.mod().isLoaded("friendsandfoes")))
                        ));
        consumer.accept(VillagerTradeLootTables.NUMISMATIST_CONTAINER_OFFERS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1))
                                .setBonusRolls(ConstantValue.exactly(0))
                                .add(TagEntry.expandTag(ModTags.Items.SHULKER_BOXES))
                                .add(TagEntry.expandTag(ModTags.Items.WALLETS))
                                .add(LootItem.lootTableItem(Items.ENDER_CHEST))
                        ));
    }
}