package com.github.warrentode.todecoins.datagen.loot_tables.collectible_coins.entity;

import com.github.warrentode.todecoins.item.TCItems;
import com.github.warrentode.todecoins.loot.ModBuiltInLootTables;
import net.minecraft.data.loot.LootTableSubProvider;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import org.jetbrains.annotations.NotNull;

import java.util.function.BiConsumer;

import static com.github.warrentode.todecoins.datagen.LootTablesGen.*;

public class SummerCoinDropsGen implements LootTableSubProvider {
    @Override
    public void generate(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        consumer.accept(ModBuiltInLootTables.SUMMER_BOSS_COIN_DROPS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .setBonusRolls(ConstantValue.exactly(0F))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ELDER_GUARDIAN_IRON.get()).when(IS_ELDER_GUARDIAN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ENDER_DRAGON_IRON.get()).when(IS_ENDER_DRAGON))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WARDEN_IRON.get()).when(IS_WARDEN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WILDFIRE_IRON.get()).when(IS_WILDFIRE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WITHER_IRON.get()).when(IS_WITHER))
                                .add(LootItem.lootTableItem(Items.ENCHANTED_GOLDEN_APPLE)
                                        .when(IS_ELDER_GUARDIAN.invert().and(IS_ENDER_DRAGON.invert())
                                                .and(IS_WARDEN.invert()).and(IS_WILDFIRE.invert())
                                                .and(IS_WITHER.invert())))
                        ));
        consumer.accept(ModBuiltInLootTables.SUMMER_COIN_DROPS,
                LootTable.lootTable()
                        .withPool(LootPool.lootPool()
                                .setRolls(ConstantValue.exactly(1.0F))
                                .setBonusRolls(ConstantValue.exactly(0F))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_BOGGED_IRON.get()).when(IS_BOGGED))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_BREEZE_IRON.get()).when(IS_BREEZE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_HAPPY_GHAST_IRON.get()).when(IS_HAPPY_GHAST))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CREAKING_IRON.get()).when(IS_CREAKING))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ALLAY_IRON.get()).when(IS_ALLAY))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ARMADILLO_IRON.get()).when(IS_ARMAIDLLO))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_AXOLOTL_IRON.get()).when(IS_AXOLOTL))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_BAT_IRON.get()).when(IS_BAT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_BEE_IRON.get()).when(IS_BEE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_BLAZE_IRON.get()).when(IS_BLAZE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CAMEL_IRON.get()).when(IS_CAMEL))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CAT_IRON.get()).when(IS_CAT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CAVE_SPIDER_IRON.get()).when(IS_CAVE_SPIDER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CHICKEN_IRON.get()).when(IS_CHICKEN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_COD_IRON.get()).when(IS_COD))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_COW_IRON.get()).when(IS_COW))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_COPPER_GOLEM_IRON.get()).when(IS_COPPER_GOLEM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CREEPER_IRON.get()).when(IS_CREEPER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_CRAB_IRON.get()).when(IS_CRAB))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_DOLPHIN_IRON.get()).when(IS_DOLPHIN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_DONKEY_IRON.get()).when(IS_DONKEY))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_DROWNED_IRON.get()).when(IS_DROWNED))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ENDERMAN_IRON.get()).when(IS_ENDERMAN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ENDERMITE_IRON.get()).when(IS_ENDERMITE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_EVOKER_IRON.get()).when(IS_EVOKER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_FOX_IRON.get()).when(IS_FOX))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_FROG_IRON.get()).when(IS_FROG))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GHAST_IRON.get()).when(IS_GHAST))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GIANT_IRON.get()).when(IS_GIANT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GLARE_IRON.get()).when(IS_GLARE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GLOW_SQUID_IRON.get()).when(IS_GLOW_SQUID))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GOAT_IRON.get()).when(IS_GOAT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GUARD_IRON.get()).when(IS_GUARD))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_GUARDIAN_IRON.get()).when(IS_GUARDIAN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_HOGLIN_IRON.get()).when(IS_HOGLIN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_HORSE_IRON.get()).when(IS_HORSE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_HUSK_IRON.get()).when(IS_HUSK))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ICEOLOGER_IRON.get()).when(IS_ICEOLOGER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ILLUSIONER_IRON.get()).when(IS_ILLUSIONER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_IRON_GOLEM_IRON.get()).when(IS_IRON_GOLEM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_LLAMA_IRON.get()).when(IS_LLAMA))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_MAGMA_CUBE_IRON.get()).when(IS_MAGMA_CUBE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_MAULER_IRON.get()).when(IS_MAULER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_MOOBLOOM_IRON.get()).when(IS_MOOBLOOM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_MOOSHROOM_IRON.get()).when(IS_MOOSHROOM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_MULE_IRON.get()).when(IS_MULE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_NUMISMATIST_IRON.get()).when(IS_NUMISMATIST))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_OCELOT_IRON.get()).when(IS_OCELOT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PARROT_IRON.get()).when(IS_PARROT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PANDA_IRON.get()).when(IS_PANDA))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PHANTOM_IRON.get()).when(IS_PHANTOM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PENGUIN_IRON.get()).when(IS_PENGUIN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PILLAGER_IRON.get()).when(IS_PILLAGER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PIG_IRON.get()).when(IS_PIG))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PIGLIN_IRON.get()).when(IS_PIGLIN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PIGLIN_BRUTE_IRON.get()).when(IS_PIGLIN_BRUTE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PIGLIN_MERCHANT_IRON.get()).when(IS_PIGLIN_MERCHANT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_POLAR_BEAR_IRON.get()).when(IS_POALR_BEAR))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_PUFFERFISH_IRON.get()).when(IS_PUFFERFISH))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_RABBIT_IRON.get()).when(IS_RABBIT))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_RAVAGER_IRON.get()).when(IS_RAVAGER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_RASCAL_IRON.get()).when(IS_RASCAL))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SALMON_IRON.get()).when(IS_SALMON))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SHEEP_IRON.get()).when(IS_SHEEP))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SHULKER_IRON.get()).when(IS_SHULKER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SILVERFISH_IRON.get()).when(IS_SILVERFISH))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SKELETON_IRON.get()).when(IS_SKELETON))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SKELETON_HORSE_IRON.get()).when(IS_SKELETON_HORSE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SLIME_IRON.get()).when(IS_SLIME))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SNIFFER_IRON.get()).when(IS_SNIFFER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SNOW_GOLEM_IRON.get()).when(IS_SNOW_GOLEM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SPIDER_IRON.get()).when(IS_SPIDER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SQUID_IRON.get()).when(IS_SQUID))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_SQUIRREL_IRON.get()).when(IS_SQUIRREL))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_STRAY_IRON.get()).when(IS_STRAY))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_TADPOLE_IRON.get()).when(IS_TADPOLE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_TROPICAL_FISH_IRON.get()).when(IS_TROPICAL_FISH))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_TRADER_LLAMA_IRON.get()).when(IS_TRADER_LLAMA))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_TURTLE_IRON.get()).when(IS_TURTLE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_TUFF_GOLEM_IRON.get()).when(IS_TUFF_GOLEM))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_VEX_IRON.get()).when(IS_VEX))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_VINDICATOR_IRON.get()).when(IS_VINDICATOR))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_VILLAGER_IRON.get()).when(IS_VILLAGER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WANDERING_TRADER_IRON.get()).when(IS_WANDERING_TRADER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WITHER_SKELETON_IRON.get()).when(IS_WITHER_SKELETON))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WOLF_IRON.get()).when(IS_WOLF))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_WITCH_IRON.get()).when(IS_WITCH))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ZOGLIN_IRON.get()).when(IS_ZOGLIN))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ZOMBIE_IRON.get()).when(IS_ZOMBIE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ZOMBIE_HORSE_IRON.get()).when(IS_ZOMBIE_HORSE))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ZOMBIE_VILLAGER_IRON.get()).when(IS_ZOMBIE_VILLAGER))
                                .add(LootItem.lootTableItem(TCItems.COLLECTIBLE_COIN_ZOMBIFIED_PIGLIN_IRON.get()).when(IS_ZOMBIFIED_PIGLIN))
                                .add(LootItem.lootTableItem(TCItems.SERVER_TOKEN_COIN.get()).when(IS_KNOWN_ENTITY.invert()))
                        ));
    }
}