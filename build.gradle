//file:noinspection GroovyAssignabilityCheck
//file:noinspection GrUnresolvedAccess
//file:noinspection GroovyAccessibility
buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://jitpack.io' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.0,6.2', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = "${project.minecraft_version}-${project.mod_version}"
group = "${project.mod_domain}"
archivesBaseName = "todecoins"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17'
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // Currently, this location cannot be changed from the default.

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'todecoins'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                todecoins {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'todecoins'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                todecoins {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'todecoins'
            mods {
                todecoins {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'todecoins', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                todecoins {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

mixin {
    add sourceSets.main, "mixins.todecoins.refmap.json"
    config "mixins.todecoins.json"
    showMessageTypes = true
}

repositories {
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'

    implementation 'io.netty:netty-codec:4.1.86.Final'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'

    implementation fg.deobf("curse.maven:curios-309927:4523009")
    implementation fg.deobf("curse.maven:cagerium-709608:4517775")
    implementation fg.deobf("curse.maven:ecologics-570463:4171285")
    implementation fg.deobf("curse.maven:serene-seasons-291874:4037228")
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:4637293")
    implementation fg.deobf("curse.maven:sophisticated-core-618298:4668694")
    implementation fg.deobf("curse.maven:friends-and-foes-forge-602059:4809379")
    implementation fg.deobf("curse.maven:guard-villagers-360203:4701400")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"  : project.modid,
                "Specification-Vendor" : project.mod_author,
                "Specification-Version": "1",
                "Implementation-Title" : project.modid,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor": project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "mixins.todecoins.json"
        ])
    }
}

tasks.register('updateJson') {
    file('update.json').withWriter { w ->
        file('update_template.json').eachLine { line ->
            w << line.replaceAll("version", project.version) + System.getProperty("line.separator")
        }
        w.close()
    }
}

tasks.register('updateChangeLog', Exec) {
    workingDir(project.projectDir)
    commandLine 'git', 'log', '--date=short', '--pretty=\\"%cd - %s\\"', '--since=1.month', '--no-merges'
    standardOutput = new PrintStream("${buildDir}/CHANGELOG.txt")
}

tasks.register('deobfJar', Jar) { // Generate deobfuscated
    from sourceSets.main.output
    archiveClassifier = 'deobf'
}

tasks.register('sourceJar', Jar) { // Generate sources
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourceJar
    archives jar
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${project.mod_domain}"
            artifactId = "${project.name}"
            version = "${project.minecraft_version}-${project.mod_version}"

            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
    options.release = 17
}