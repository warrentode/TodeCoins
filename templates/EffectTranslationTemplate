// ---- Ultra-Short Effect Registration ----
// Simply call registerEffect("EFFECT_ID") in addTranslations() for each new effect.
// Optionally pass maxLevel if different from 6.

private void registerEffect(String effectId) {
    registerEffect(effectId, 6); // Default maxLevel = 6
}

private void registerEffect(String effectId, int maxLevel) {
    String effectName = EffectNameTranslations.getEffectName(effectId, locale);

    if (effectName.equals(effectId)) { // fallback triggered
        System.out.println("[Warning] Missing translation for effect key: " + effectId + " in locale: " + locale);
    }

    add("effect.todecoins." + effectId, effectName);

    Map<String, String> prefixMap = prefixTranslations.getOrDefault("prefixes", Map.of())
            .getOrDefault(locale, prefixTranslations.get("prefixes").get("en_us"));
    String minecraftNamespace = "minecraft";

    // ---- Generate potions, splash, lingering, arrows automatically ----
    for (int level = 0; level <= maxLevel; level++) {
        String levelSuffix = (level == 0) ? "" : "_level" + level;

        add("item." + minecraftNamespace + ".potion.effect." + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("potion")));
        add("item." + minecraftNamespace + ".potion.effect.long_" + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("potion_extended")));
        add("item." + minecraftNamespace + ".splash_potion.effect." + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("splash_potion")));
        add("item." + minecraftNamespace + ".splash_potion.effect.long_" + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("splash_potion_extended")));
        add("item." + minecraftNamespace + ".lingering_potion.effect." + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("lingering_potion")));
        add("item." + minecraftNamespace + ".lingering_potion.effect.long_" + effectId + levelSuffix,
                generatePotionName(effectName, level, prefixMap.get("lingering_potion_extended")));
        add("item." + minecraftNamespace + ".arrow.effect." + effectId + levelSuffix,
                generateArrowName(effectName, level, prefixMap.get("arrow")));
        add("item." + minecraftNamespace + ".tipped_arrow.effect.long_" + effectId + levelSuffix,
                generateArrowName(effectName, level, prefixMap.get("arrow_extended")));
    }

    // ---- Safety check for missing locales ----
    Set<String> allLocales = Set.of(
            "en_us","en_gb","en_ca","en_au","en_pt",
            "de_de","fr_fr","fr_ca","es_es","es_mx","pt_pt","pt_br",
            "it_it","nl_nl","ru_ru","uk_ua","pl_pl","cs_cz","sk_sk",
            "hu_hu","sv_se","no_no","da_dk","fi_fi","tr_tr","el_gr",
            "ro_ro","bg_bg","zh_cn","zh_tw","ja_jp","ko_kr","th_th",
            "ar_sa","he_il","hi_in","id_id","ms_my"
    );
    for (String checkLocale : allLocales) {
        String nameCheck = EffectNameTranslations.getEffectName(effectId, checkLocale);
        if (nameCheck.equals(effectId)) {
            System.out.println("[Warning] Missing translation for effect '" + effectId + "' in locale: " + checkLocale);
        }
    }
}

// Inside addTranslations():
registerEffect("thunderstrike"); // Single line for normal 6-level effect
registerEffect("feline_presence", 3); // Single line for effect with max level 3